{"ast":null,"code":"var _jsxFileName = \"/home/cal/componentsCAVS/veramoAgent/client/src/App.js\",\n  _s6 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport config from \"./config.json\";\nimport secret from \"./secret.json\";\nimport axios from \"axios\";\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s6();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  const roles = [\"CertificateIssuer\", \"CAVS\", \"AuthorHolder\", \"Spreader\", \"ReaderVerifier\"];\n  const [selectedRole, setSelectedRole] = useState(\"CertificateIssuer\");\n  const [addressVeramoAgent] = useState(config.veramoagent);\n  const [addressIPFSAgent] = useState(config.ipfsagent);\n  const [peerIDIPFS, setPeerIDIPFS] = useState('');\n  const [addressTextProcessor] = useState(config.textprocessor);\n  const [addressSkillProcessor] = useState(config.skillprocessor);\n  const [addressCAVS] = useState(config.cavsendpoint);\n  const [dids, setDids] = useState([]);\n  const [selectedDid, setSelectedDid] = useState(config.veramoagent);\n  const [image, setImage] = useState(\"\");\n  const [verifiableCredentialHash1, setVerifiableCredentialHash1] = useState(\"\");\n\n  // Load IPFS PeerID\n  useEffect(() => {\n    fetch(`${addressIPFSAgent}/set_secrets?name=${secret.name}&psw=${secret.password}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to set secrets on IPFS agent');\n      }\n      // If the set_secrets request is successful, fetch the PeerID\n      return fetch(`${addressIPFSAgent}/peer_id`);\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to get PeerID from IPFS agent');\n      }\n      // If the peer_id request is successful, parse the response body as JSON\n      return response.json();\n    }).then(data => {\n      // Access the parsed JSON data and log the PeerID\n      console.log('Received PeerID:', data.peer_id);\n      // Do whatever you want with the PeerID, like setting it in state\n      setPeerIDIPFS(data.peer_id);\n    }).catch(error => {\n      console.error('Error during IPFS PeerID fetch:', error);\n    });\n  }, [addressIPFSAgent, secret]);\n\n  // Use useEffect for fetching data using the obtained addressVeramoAgent\n  useEffect(() => {\n    if (addressVeramoAgent) {\n      fetch(addressVeramoAgent + \"/get_own_did\").then(response => response.json()).then(data => {\n        if (data.dids.length !== 0) {\n          setDids(data.dids);\n          setSelectedDid(data.dids[0]);\n        }\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    }\n  }, [addressVeramoAgent]); // Ensure that [addressVeramoAgent] is included in the dependency array\n  // get qr code\n  const getQR = async event => {\n    console.log(\"here\");\n    if (event.type === 'click') {\n      if (verifiableCredentialHash1) {\n        const response = await axios.post(`${addressVeramoAgent}/get_qr_code/jwt`, {\n          jwt: verifiableCredentialHash1\n        }, {\n          responseType: 'arraybuffer',\n          // Set the response type to arraybuffer\n          timeout: 65000\n        });\n        console.log(\"post request\");\n        const base64 = btoa(new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), ''));\n        setImage(base64);\n        console.log(\"hello\" + response.data);\n      }\n    }\n  };\n  const newDID = async () => {\n    try {\n      const response = await axios.get(`${addressVeramoAgent}/create_did`, {\n        timeout: 65000\n      });\n      let newdids = [...dids, response.data.did];\n      setDids(newdids); //update list\n      setSelectedDid(newdids[0]);\n    } catch (error) {\n      console.error('Error fetching credentials:', error);\n    }\n  };\n  const AuthorHolder = () => {\n    _s();\n    const [jsonDataVCSkills, setJsonDataVCSkills] = useState('');\n    const [jsonDataVCStatement, setjsonDataVCStatement] = useState('');\n    const [selectedCredentials, setSelectedCredentials] = useState([]);\n    const [statementText, setStatementText] = useState(\"\");\n    const [opFeedback, setOpFeedback] = useState(\"Ready to Request\");\n    const [hostURLStatement, setHostURLStatement] = useState(\"\");\n    const [categoryStatement, setCategoryStatement] = useState(\"\");\n    const [typeStatement] = useState([\"News\", \"Article\", \"Rumor\", \"Comment\", \"Opinion\", \"Leak\", \"Blog\", \"Post\"]);\n    const [selectedTypeStatement, setSelectedTypeStatement] = useState(typeStatement[0]);\n    const [listCIDs, setListCIDs] = useState([]);\n\n    // Function to handle checkbox selection\n    const handleCheckboxChange = (event, index) => {\n      console.log(selectedCredentials);\n      if (event.target.checked) {\n        //insert element\n        setSelectedCredentials([...selectedCredentials, index]);\n      } else {\n        //remove element\n        setSelectedCredentials(selectedCredentials.filter(item => item !== index));\n      }\n    };\n\n    // Function to fetch credentials\n    const sendToCavs = async () => {\n      let credentials = [];\n      console.log(jsonDataVCSkills.at(0));\n      if (selectedCredentials.length === 0) {\n        setOpFeedback(\"Please select VCs\");\n        return;\n      }\n      for (let i = 0; i < selectedCredentials.length; i++) {\n        credentials.push(jsonDataVCSkills.at(selectedCredentials.at(i)).verifiableCredential);\n      }\n      console.log(credentials);\n      setOpFeedback(\"Processing creation of Statement VC\");\n      try {\n        let response = await axios.post(`${addressCAVS}/api/vc`, {\n          document: statementText,\n          credentials: credentials,\n          typeStatement: selectedTypeStatement,\n          category: categoryStatement,\n          hostURL: hostURLStatement,\n          holderDID: selectedDid\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 65000\n        });\n        console.log(response);\n        setOpFeedback(\"Got VC Statement, storing in wallet\");\n        response = await axios.post(`${addressVeramoAgent}/store_vc`, {\n          verifiableCredential: response.data.jwt\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 650000\n        });\n        console.log(response);\n        setStatementText(\"\");\n        setCategoryStatement(\"\");\n        setHostURLStatement(\"\");\n        setOpFeedback(\"Done\");\n      } catch (error) {\n        console.error('Error obtain credentials:', error);\n      }\n    };\n    const fetchCredentials = async () => {\n      try {\n        const response = await axios.get(`${addressVeramoAgent}/list_verifiable_credentials_with_type`, {\n          timeout: 65000,\n          params: {\n            type: \"ESCO_type_VerifiableCredential\"\n          }\n        });\n        setJsonDataVCSkills(response.data);\n      } catch (error) {\n        console.error('Error fetching credentials:', error);\n      }\n    };\n    const fetchStatementCredentials = async () => {\n      try {\n        const response = await axios.get(`${addressVeramoAgent}/list_verifiable_credentials_with_type`, {\n          timeout: 65000,\n          params: {\n            type: \"StatementVerifiableCredential\"\n          }\n        });\n        setjsonDataVCStatement(response.data);\n      } catch (error) {\n        console.error('Error fetching credentials:', error);\n      }\n    };\n    const ipfsPublish = async id => {\n      try {\n        let response = await axios.post(`${addressIPFSAgent}/upload`, {\n          //sending jwt\n          text: jsonDataVCStatement[id].verifiableCredential.proof.jwt\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 65000\n        });\n        console.log(\"received response\" + response.data.CID);\n        const updatedListCIDs = [...listCIDs]; // Create a copy of the array\n        updatedListCIDs[id] = response.data.CID; // Update the value at the specified index\n        console.log(\"id:\" + id);\n        console.log(\"updated CID at index \" + id + \": \" + updatedListCIDs[id]);\n        setListCIDs(updatedListCIDs); // Update the state with the new array\n      } catch (error) {\n        console.error('Error publishing on IPFS or fetching:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: fetchCredentials,\n        children: \"Fetch ESCO Skills Verifiable Credential\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), jsonDataVCSkills && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credentials-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select Credentials for VC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), jsonDataVCSkills.map((credential, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credential\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              width: '2vw',\n              height: '2vw'\n            } // Set the width and height\n            ,\n            type: \"checkbox\",\n            checked: selectedCredentials.includes(index),\n            onChange: event => handleCheckboxChange(event, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Credential #\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hash: \", credential.hash]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Issuance Date: \", credential.verifiableCredential.issuanceDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Credential Type: \", credential.verifiableCredential.type.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Issuer DID: \", credential.verifiableCredential.issuer.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Holder DID: \", credential.verifiableCredential.credentialSubject.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            className: \"input\",\n            value: JSON.stringify(credential.verifiableCredential.credentialSubject, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected Credentials: \", selectedCredentials.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Statement Category(Economics, Medicine, Science..)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        id: \"holderURL\",\n        value: categoryStatement,\n        onChange: e => setCategoryStatement(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Statement Host URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        id: \"holderURL\",\n        value: hostURLStatement,\n        onChange: e => setHostURLStatement(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Statement Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-box\",\n        value: selectedTypeStatement,\n        onChange: e => {\n          setSelectedTypeStatement(e.target.value);\n        },\n        children: typeStatement.map((typeS, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: typeS,\n          children: typeS\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Statement:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-input-area\",\n        placeholder: \"Enter Statement\",\n        value: statementText,\n        onChange: e => setStatementText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: sendToCavs,\n        children: \"Send to CAVS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback-text\",\n        children: opFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: fetchStatementCredentials,\n        children: \" Fetch StatementVerifiableCredentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), jsonDataVCStatement && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credentials-list-container\",\n        children: jsonDataVCStatement.map((credential, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credential\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"process-button\",\n            onClick: () => ipfsPublish(index),\n            children: \" Publish/Get on IPFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Credential #\", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 33\n          }, this), listCIDs[index] ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"CID is defined: \", listCIDs[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"CID is unkwown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Hash: \", credential.hash]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Issuance Date: \", credential.verifiableCredential.issuanceDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Credential Type: \", credential.verifiableCredential.type.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Issuer DID: \", credential.verifiableCredential.issuer.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Holder DID: \", credential.verifiableCredential.credentialSubject.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            readOnly: true,\n            className: \"input\",\n            value: JSON.stringify(credential.verifiableCredential.credentialSubject, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Spreader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this);\n  };\n  _s(AuthorHolder, \"fW0xKRHp79re+z7fXKFmFxVOCdA=\");\n  const Spreader = () => {\n    _s2();\n    const [hostURLPresentation, setHostURLPresentation] = useState('');\n    const [selectedTypePresentation, setSelectedTypePresentation] = useState('Origin');\n    const [cidOfStatementVC, setCidOfStatementVC] = useState('');\n    const [prevUUID, setPrevUUID] = useState('');\n    const [prevJWT, setPrevJWT] = useState('');\n    const [opFeedback, setOpFeedback] = useState('Ready To Create');\n    const [jwtGot, setJwtGot] = useState('');\n    const typePresentation = [\"Origin\", \"Diffusion\"]; // Define your array of presentation types\n\n    const [jsonVPsDiffusion, setJsonVPsDiffusion] = useState([]);\n    const createPresentationOrigin = async () => {\n      if (hostURLPresentation && selectedTypePresentation && cidOfStatementVC) {\n        try {\n          let response = await axios.post(`${addressVeramoAgent}/issue_verifiable_presentation/holder_claim`, {\n            holder: selectedDid,\n            type: \"StatementDiffusion_VPv01\",\n            attributes: {\n              statement_vc_cid_or_url: cidOfStatementVC,\n              prev_vp_uuid: \"\",\n              //jwt of prev_vp, empty if origin\n              url_or_cid_jwt_prev: \"\",\n              type: \"origin\",\n              //first presentation that refers to statement vc, else diffusion\n              host_URL: hostURLPresentation\n            },\n            assertion: \"This VP is submitted by the subject as evidence of VC propagation\",\n            store: true //store it too\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 65000\n          });\n          console.log(\"post request\");\n          console.log(response.data.jwt);\n          setOpFeedback(\"Created VP, below jwt\");\n          setJwtGot(response.data.jwt);\n        } catch (error) {\n          setOpFeedback(\"Error occurres\");\n        }\n      } else {\n        setOpFeedback(\"Omitted Field/s\");\n      }\n    };\n    const createPresentationDiffusion = async () => {\n      if (hostURLPresentation && selectedTypePresentation && cidOfStatementVC && prevUUID) {\n        try {\n          setOpFeedback(\"Loading previous VP obtained to IPFS with own PeerID\");\n          let obj = {};\n          obj[prevUUID] = prevJWT;\n          let text = JSON.stringify(obj);\n          let response = await axios.post(`${addressIPFSAgent}/upload`, {\n            text: text //store mapping between UUID of prev and its JWT\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 120000 //2 minutes fair limit\n          });\n          let cid = response.data.CID;\n          console.log(\"here is the cid\" + cid);\n          setOpFeedback(\"Done loading previous VP, creating new VP\");\n          response = await axios.post(`${addressVeramoAgent}/issue_verifiable_presentation/holder_claim`, {\n            holder: selectedDid,\n            type: \"StatementDiffusion_VPv01\",\n            attributes: {\n              statement_vc_cid_or_url: cidOfStatementVC,\n              prev_vp_uuid: prevUUID,\n              //jwt of prev_vp, empty if origin\n              url_or_cid_jwt_prev: cid,\n              type: \"diffusion\",\n              //first presentation that refers to statement vc, else diffusion,\n              host_URL: hostURLPresentation\n            },\n            assertion: \"This VP is submitted by the subject as evidence of VC propagation\",\n            store: true //store it too\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 65000\n          });\n          console.log(\"post request\");\n          console.log(response.data.jwt);\n          setOpFeedback(\"Created VP, below jwt\");\n          setJwtGot(response.data.jwt);\n        } catch (error) {\n          setOpFeedback(\"Error occurres\");\n        }\n      } else {\n        setOpFeedback(\"Omitted Field/s\");\n      }\n    };\n    const fetchVerifiablePresentations = async () => {\n      try {\n        const response = await axios.get(`${addressVeramoAgent}/list_verifiable_presentations_with_type`, {\n          timeout: 65000,\n          params: {\n            type: \"StatementDiffusion_VPv01\"\n          }\n        });\n        console.log(response.data);\n        setJsonVPsDiffusion(response.data);\n      } catch (error) {\n        console.error('Error fetching credentials:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      style: {\n        align: 'center',\n        textAlign: 'center',\n        width: '57vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-label\",\n        children: [\"PeerID on IPFS:\", peerIDIPFS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-dids-data\",\n        children: \"Create Diffusion Verifiable Presentation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Presentation Host URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        id: \"holderURL\",\n        value: hostURLPresentation,\n        onChange: e => setHostURLPresentation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"holderURL\",\n        children: \"Presentation Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select-box\",\n        value: selectedTypePresentation,\n        onChange: e => {\n          setSelectedTypePresentation(e.target.value);\n        },\n        children: typePresentation.map((typeP, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: typeP,\n          children: typeP\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 54\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 13\n      }, this), (selectedTypePresentation === 'Origin' || selectedTypePresentation === 'Diffusion') && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"holderURL\",\n          children: \"CID of Statement Verifiable Credential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"cidStatement\",\n          value: cidOfStatementVC,\n          onChange: e => setCidOfStatementVC(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 17\n        }, this), \" \", selectedTypePresentation === 'Origin' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"process-button\",\n          onClick: createPresentationOrigin,\n          children: \"Create Origin Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 102\n      }, this), selectedTypePresentation === 'Diffusion' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"holderURL\",\n          children: \"UUID of Previous Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"uuidPrev\",\n          value: prevUUID,\n          onChange: e => setPrevUUID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"holderURL\",\n          children: \"JWT of Previous Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"uuidPrev\",\n          value: prevJWT,\n          onChange: e => setPrevJWT(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"process-button\",\n          onClick: createPresentationDiffusion,\n          children: \"Create Diffusion Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback-text\",\n        children: opFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this), jwtGot && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"jwt-textarea\",\n        style: {\n          overflowX: 'auto',\n          width: '100%',\n          minHeight: '100px'\n        },\n        value: jwtGot,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: fetchVerifiablePresentations,\n        children: \"Fetch Diffusion VP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 13\n      }, this), jsonVPsDiffusion.map((presentation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credential\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Diffusion VP #\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Issuance Date: \", presentation.verifiablePresentation.issuanceDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"UUID of VP: \", presentation.verifiablePresentation.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"URL or CID on IPFS of prev JWT URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"VC statement CID or URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Holder DID: \", presentation.verifiablePresentation.holder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Host URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.host_URL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Prev UUID: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.prev_vp_uuid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"JWT of Diffusion VP #\", index + 1, \" for next Diffusion VP\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"jwt-textarea\",\n          style: {\n            overflowX: 'auto',\n            width: '90%',\n            minHeight: '100px'\n          },\n          value: presentation.verifiablePresentation.proof.jwt,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }, this)), jsonVPsDiffusion.length > 0 && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"jwt-textarea\",\n        style: {\n          overflowX: 'auto',\n          width: '100%',\n          height: '10vw'\n        },\n        value: JSON.stringify(jsonVPsDiffusion, null, 2),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 17\n    }, this);\n  };\n  _s2(Spreader, \"acKXSpm6kCrROEZyknXIgy0/mBU=\");\n  const CertificateIssuerForm = () => {\n    _s3();\n    const [holderDID, setHolderDID] = useState('');\n    const [holderURL, setHolderURL] = useState('');\n    const [certificateText, setCertificateText] = useState('');\n    const [skillName, setSkillName] = useState('');\n    const [skillUri, setSkillUri] = useState('');\n    const [skills, setSkills] = useState([]);\n    const [opFeedback, setOpFeedback] = useState('Ready to Create Credential');\n    const [extractorEngines, setExtractorEngines] = useState([]);\n    const [selectedEngine, setSelectedEngine] = useState(''); // State to hold the selected engine\n\n    const [, setEnricherEngines] = useState([]);\n    const [, setSelectedEnricherEngine] = useState(''); // State to hold the selected engine\n\n    const [skillExtractorEngines, setSkillExtractorEngines] = useState([]);\n    const [selectedSkillExtractorEngine, setSelectedSkillExtractorEngine] = useState([]);\n    useEffect(() => {\n      if (addressSkillProcessor) {\n        fetch(addressSkillProcessor + \"/api_skills\").then(response => response.json()).then(data => {\n          if (data.skills_engines.length !== 0) {\n            setSkillExtractorEngines(data.skills_engines);\n            setSelectedSkillExtractorEngine(data.skills_engines[0]);\n          }\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n      }\n    }, [addressSkillProcessor]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n    // Use useEffect for fetching data using the obtained addressTextProcessor\n    useEffect(() => {\n      if (addressTextProcessor) {\n        fetch(addressTextProcessor + \"/api_extractor\").then(response => response.json()).then(data => {\n          if (data.extractor_engines.length !== 0) {\n            setExtractorEngines(data.extractor_engines);\n            setSelectedEngine(data.extractor_engines[0]);\n          }\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n        fetch(addressTextProcessor + \"/api_enricher\").then(response => response.json()).then(data => {\n          if (data.enricher_engines.length !== 0) {\n            setEnricherEngines(data.enricher_engines);\n            setSelectedEnricherEngine(data.enricher_engines[0]);\n          }\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n      }\n    }, [addressTextProcessor]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n    async function extractSkillsAndAdd() {\n      let response = await axios.get(`${addressTextProcessor}/extract`, {\n        timeout: 65000,\n        params: {\n          document: certificateText,\n          engine: selectedEngine\n        }\n      });\n      setOpFeedback(\"Extracted keywords, extracting skills\");\n      let currentKeywords = {\n        keywords: response.data.keyword\n      };\n      console.log(currentKeywords);\n      if (addressSkillProcessor && currentKeywords.keywords) {\n        let response = await axios.get(`${addressSkillProcessor}/keyword_to_skills`, {\n          timeout: 65000 * currentKeywords.keywords.length,\n          params: {\n            keywords: currentKeywords.keywords,\n            engine: selectedSkillExtractorEngine\n          }\n        });\n        console.log(response.data);\n        let skillPairs = response.data.skills.map(skill => [skill[1][0], skill[1][1]]);\n        skills.push(...skillPairs); //push all with 3 dots\n        setSkills(skills);\n        setOpFeedback(\"Ready to Create Credential\");\n      }\n    }\n    function addSkill() {\n      skills.push(...[[skillName, skillUri]]);\n      setSkillName(\"\");\n      setSkillUri(\"\");\n      setSkills(skills);\n    }\n\n    //send credential issue request\n    const issueCredential = async event => {\n      if (event.key === 'Enter' || event.type === 'click' && holderURL && holderURL && skills) {\n        if (selectedDid && holderDID && skills) {\n          console.log(\"pre request\");\n          // Stringify the attributes object\n\n          let response = await axios.post(`${addressVeramoAgent}/issue_verifiable_credential`, {\n            issuer: selectedDid,\n            holder: holderDID,\n            type: \"ESCO_type_VerifiableCredential\",\n            attributes: {\n              skills: skills\n            },\n            store: false\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 65000\n          });\n          console.log(\"post request\");\n          console.log(response.data.jwt);\n          setOpFeedback(\"Created Credential, sending to Holder\");\n          response = await axios.post(`${holderURL}/store_vc`, {\n            verifiableCredential: response.data.jwt\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 650000\n          });\n          console.log(response);\n          setSkills([]);\n          setOpFeedback(\"Created Credential, create another\");\n        } else {\n          setOpFeedback(\"Omitted Field/s\");\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"credential-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Issue Certificate Verifiable Credential:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"holderDID\",\n          children: \"New Holder DID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"holderDID\",\n          value: holderDID,\n          onChange: e => setHolderDID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"holderURL\",\n          children: \"New Holder Endpoint URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"holderURL\",\n          value: holderURL,\n          onChange: e => setHolderURL(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Certificate Description To Skills\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-input-area\",\n          placeholder: \"Enter Certificate Description...\",\n          value: certificateText,\n          onChange: e => setCertificateText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"extractor-engines-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-title\",\n            children: \"Keyword Extractor Engines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-box\",\n            value: selectedEngine,\n            onChange: e => setSelectedEngine(e.target.value),\n            children: extractorEngines.map((engine, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: engine,\n              children: engine\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 67\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-title\",\n            children: \"Skill Extractor Engines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-box\",\n            value: selectedSkillExtractorEngine,\n            onChange: e => setSelectedSkillExtractorEngine(e.target.value),\n            children: skillExtractorEngines.map((engine, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: engine,\n              children: engine\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 72\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: extractSkillsAndAdd,\n            children: \"Extract Skills from Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Manual Skills Insertion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group manual-skills-insertion\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"skillName\",\n            children: \"Skill Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-input\",\n            id: \"skillName\",\n            value: skillName,\n            onChange: e => setSkillName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skill-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"skillUri\",\n            children: \"Skill URI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-input\",\n            id: \"skillUri\",\n            value: skillUri,\n            onChange: e => setSkillUri(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: addSkill,\n            children: \"Add Skill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"keywords-list\",\n        children: skills.map((skill, i) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"keywords-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'blue',\n                backgroundColor: 'lightgrey'\n              },\n              children: \"Skill: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 33\n            }, this), \" \", skill[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'blue',\n                backgroundColor: 'lightgrey'\n              },\n              children: \"Skill URI: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: skill[1],\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: skill[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 48\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: issueCredential,\n        children: \"Issue Verifiable Credential\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback-text\",\n        children: opFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 17\n    }, this);\n  };\n  _s3(CertificateIssuerForm, \"PxQDOyE3qmjEh0pPUwrQKA02u/Y=\");\n  const CavsComponentPanel = ({}) => {\n    _s4();\n    const [processingFeedback, setProcessingFeedback] = useState('');\n    const [statementVC] = useState('');\n    const [extractorEngines, setExtractorEngines] = useState([]);\n    const [selectedKeywordsEngine, setSelectedKeywordsEngine] = useState(''); // State to hold the selected engine\n\n    const [enricherEngines, setEnricherEngines] = useState([]);\n    const [selectedEnricherEngine, setSelectedEnricherEngine] = useState(''); // State to hold the selected engine\n\n    const [skillExtractorEngines, setSkillExtractorEngines] = useState([]);\n    const [selectedSkillExtractorEngine, setSelectedSkillExtractorEngine] = useState([]);\n    // Combine selected engines into a string\n    const [selectedEnginesString, setSelectedEnginesString] = useState(\"\");\n    const [changeOP, setChangeOP] = useState(\"\");\n    useEffect(() => {\n      if (addressCAVS) {\n        fetch(addressCAVS + \"/api_skills\").then(response => response.json()).then(data => {\n          if (data.skills_engines.length !== 0) {\n            setSkillExtractorEngines(data.skills_engines);\n            setSelectedSkillExtractorEngine(data.skills_engines[0]);\n            setChangeOP(\"yes\");\n          }\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n      }\n    }, [addressCAVS]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n    useEffect(() => {\n      if (addressCAVS) {\n        fetch(addressCAVS + \"/api_extractor\").then(response => response.json()).then(data => {\n          if (data.extractor_engines.length !== 0) {\n            setExtractorEngines(data.extractor_engines);\n            setSelectedKeywordsEngine(data.extractor_engines[0]);\n            setChangeOP(\"yes\");\n          }\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n        fetch(addressCAVS + \"/api_enricher\").then(response => response.json()).then(data => {\n          if (data.enricher_engines.length !== 0) {\n            setEnricherEngines(data.enricher_engines);\n            setSelectedEnricherEngine(data.enricher_engines[0]);\n          }\n          setChangeOP(\"yes\");\n        }).catch(error => {\n          console.error('Error fetching data:', error);\n        });\n      }\n    }, [addressCAVS]); // Ensure that [addressTextProcessor] is included in the dependency array\n    useEffect(() => {\n      setSelectedEnginesString([selectedKeywordsEngine, selectedEnricherEngine, selectedSkillExtractorEngine].join(', '));\n      setChangeOP(\"\");\n    }, [changeOP === \"yes\"]);\n    const updateConfig = async () => {\n      if (addressCAVS) {\n        try {\n          const response = await axios.post(`${addressCAVS}/set_api`, {\n            extractorEngine: selectedKeywordsEngine,\n            enricherEngine: selectedEnricherEngine,\n            skillExtractorEngine: selectedSkillExtractorEngine\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            timeout: 65000\n          });\n          setSelectedEnginesString([response.data.selectedExtractorEngine, response.data.selectedEnricherEngine, response.data.selectedSkillExtractorEngine].join(', '));\n          console.log(\"did it\");\n        } catch (error) {\n          console.error('Error updating config:', error);\n          setProcessingFeedback(\"Error updating config\");\n        }\n      } else {\n        setProcessingFeedback(\"Omitted Field/s\");\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: [\"CAVS available at \", addressCAVS]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extractor-engines-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-extractor-engines-data\",\n          children: \"Extractor Engines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"extractor-engines-select\",\n          value: selectedKeywordsEngine,\n          onChange: e => setSelectedKeywordsEngine(e.target.value),\n          children: extractorEngines.map((engine, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: engine,\n            children: engine\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extractor-engines-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-extractor-engines-data\",\n          children: \"Enricher Engines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"extractor-engines-select\",\n          value: selectedEnricherEngine,\n          onChange: e => setSelectedEnricherEngine(e.target.value),\n          children: enricherEngines.map((engine, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: engine,\n            children: engine\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extractor-engines-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title-extractor-engines-data\",\n          children: \"Skill Extractor Engines:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"extractor-engines-select\",\n          value: selectedSkillExtractorEngine,\n          onChange: e => setSelectedSkillExtractorEngine(e.target.value),\n          children: skillExtractorEngines.map((engine, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: engine,\n            children: engine\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: updateConfig,\n        children: \"Update Config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Setup: \", processingFeedback, \" \", selectedEnginesString]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 17\n      }, this), statementVC && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: true,\n        className: \"input\",\n        value: JSON.stringify(statementVC, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 13\n    }, this);\n  };\n  _s4(CavsComponentPanel, \"AOxJpd8sU+WJurbYK9ChKlUGh4Q=\");\n  const ReaderVerifier = () => {\n    _s5();\n    //const for reading qr functionality\n    //default image loader config https://www.npmjs.com/package/react-drag-drop-files\n    const [, setFile] = useState(null);\n    const [readData, setReadData] = useState(null);\n    const handleChange = file => {\n      setFile(file);\n      //reading from https://www.youtube.com/watch?v=nCf7wb8a4YM\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        //remove prefix and set\n        setReadData(reader.result.replace(/^data:image\\/\\w+;base64,/, ''));\n        //no remove\n        //etReadData(reader.result)\n        console.log(reader.result);\n      };\n    };\n    const fileTypes = [\"PNG\"];\n\n    // const for ReaderVerifier\n\n    const [opFeedback, setOpFeedback] = useState('Ready');\n    const [inputJWT, setInputJWT] = useState('');\n    // Define your array of presentation types\n\n    const [jsonVPsDiffusion, setJsonVPsDiffusion] = useState([]);\n    const [decodedJWT, setDecodedJWT] = useState(\"\");\n    const [chainOfVP, setChainOfVP] = useState([]);\n    const [verifiableCredentialStatement, setVerifiableCredentialStatement] = useState('');\n    const [jsonDataVCSkills, setJsonDataVCSkills] = useState([]);\n    const [jsonDataVCSkills2, setJsonDataVCSkills2] = useState([]);\n    const [jsonDataVCSkills3, setJsonDataVCSkills3] = useState([]);\n    const [verificationResSkill, setVerificationResSkill] = useState([]);\n    const [traceLen, setTraceLen] = useState(0);\n    const [verificationResDiffusion, setVerificationResDiffusion] = useState([]);\n    const verify_VC = async vc => {\n      try {\n        let response = await axios.post(`${addressVeramoAgent}/verify`, {\n          credential: vc\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 65000\n        });\n        return response.data.res;\n      } catch (error) {\n        console.log(\"error in verification\");\n      }\n      return \"\";\n    };\n    const verifyVPDiffusion = async (vp, index) => {\n      // Make a copy of the verificationResSkill array\n      const updatedverificationResDiffusion = [...verificationResDiffusion];\n      let verval = await verify_VP(vp);\n      console.log(verval);\n      // Update the verification result for the specific index\n      updatedverificationResDiffusion[index] = verval.toString();\n      console.log(index);\n      // Set the updated array as the new state\n      setVerificationResDiffusion(updatedverificationResDiffusion);\n    };\n    const verifySkill = async (cred, index) => {\n      // Make a copy of the verificationResSkill array\n      const updatedVerificationResSkill = [...verificationResSkill];\n      let verval = await verify_VC(cred);\n      console.log(verval);\n      // Update the verification result for the specific index\n      updatedVerificationResSkill[index] = verval.toString();\n      console.log(index);\n      // Set the updated array as the new state\n      setVerificationResSkill(updatedVerificationResSkill);\n    };\n    const verify_VP = async vp => {\n      try {\n        let response = await axios.post(`${addressVeramoAgent}/verify/vp`, {\n          vp: vp\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 65000\n        });\n        return response.data.res;\n      } catch (error) {\n        console.log(\"error in verification\");\n      }\n      return \"\";\n    };\n    const [risVerDecoded, setRisVerDecoded] = useState('');\n    const verifyVPDecoded = async vp => {\n      // Make a copy of the verificationResSkill array\n      let verval = await verify_VP(vp);\n      console.log(verval);\n      // Update the verification result for the specific index\n      setRisVerDecoded(verval.toString());\n    };\n    const [risVC, setRisVC] = useState('');\n    const verifyStatementVC = async vc => {\n      // Make a copy of the verificationResSkill array\n      let verval = await verify_VC(vc);\n      console.log(verval);\n      // Update the verification result for the specific index\n      setRisVC(verval.toString());\n    };\n    const fetchVerifiablePresentations = async () => {\n      try {\n        const response = await axios.get(`${addressVeramoAgent}/list_verifiable_presentations_with_type`, {\n          timeout: 65000,\n          params: {\n            type: \"StatementDiffusion_VPv01\"\n          }\n        });\n        console.log(response.data);\n        setJsonVPsDiffusion(response.data);\n      } catch (error) {\n        console.error('Error fetching credentials:', error);\n      }\n    };\n    const decodeJWTVerifiablePresentationsText = async () => {\n      if (inputJWT) {\n        try {\n          const response = await axios.get(`${addressVeramoAgent}/decode_jwt`, {\n            //TODO\n            timeout: 65000,\n            params: {\n              jwt: inputJWT\n            }\n          });\n          console.log(response.data);\n          setDecodedJWT(response.data);\n          setRisVerDecoded(''); //set to unkown\n        } catch (error) {\n          console.error('Error fetching credentials:', error);\n          setOpFeedback(\"Error in decoding jwt\");\n        }\n      } else {\n        setOpFeedback(\"Provide a jwt\");\n      }\n    };\n    const decodeJWTVerifiablePresentationsImg = async () => {\n      if (!readData) {\n        setOpFeedback(\"Provide a JWT\");\n        return;\n      }\n      try {\n        const response = await axios.post(`${addressVeramoAgent}/decode_jwt/image`, {\n          img_data: readData\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          timeout: 165000\n        });\n        console.log(response.data);\n        setDecodedJWT(response.data);\n      } catch (error) {\n        console.error('Error fetching credentials:', error);\n        setOpFeedback(\"Error in decoding JWT\");\n      }\n    };\n    //extract from VC\n    const fetchSkillsFromVC = async () => {\n      if (verifiableCredentialStatement) {\n        setJsonDataVCSkills(verifiableCredentialStatement.credentialSubject.credentials_for_skills);\n        setJsonDataVCSkills2(verifiableCredentialStatement.credentialSubject.credentials_for_similar_concepts_skills);\n        setJsonDataVCSkills3(verifiableCredentialStatement.credentialSubject.credentials_for_general_concepts_skills);\n      }\n    };\n    const closeSkill = () => {\n      setJsonDataVCSkills([]);\n      setJsonDataVCSkills2([]);\n      setJsonDataVCSkills2([]);\n    };\n    //trace back from VP diffusion of type diffusion to VP diffusion of type origin and then to VC Statement\n    const traceBack = async () => {\n      let history = [];\n      let current, prev, response, jwt_of_prev, VC;\n      let i = 0;\n      if (!decodedJWT) {\n        return;\n      }\n      try {\n        setOpFeedback(\"Tracing back\");\n        current = decodedJWT;\n        while (current) {\n          //current will be assigned null when its time to stop\n          response = await axios.get(`${addressIPFSAgent}/retrieve`, {\n            timeout: 120000,\n            //2 min wait max\n            params: {\n              cid: current.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev\n            }\n          });\n          console.log(\"result got\" + JSON.stringify(response.data, null, 2));\n          i++;\n          setOpFeedback(\"Tracing back at START - \" + i);\n          //address jwt of prev with uuid of prev as key\n          jwt_of_prev = JSON.parse(response.data.result)[current.verifiableCredential[0].credentialSubject.prev_vp_uuid];\n          setOpFeedback(\"Decoding jwt of START - \" + i);\n          response = await axios.get(`${addressVeramoAgent}/decode_jwt`, {\n            //TODO\n            timeout: 65000,\n            params: {\n              jwt: jwt_of_prev\n            }\n          });\n          prev = response.data;\n          history.push(prev);\n          setOpFeedback(\"Decoded jwt up to (START - \" + i + \" ) proceed\");\n          if (prev.verifiableCredential[0].credentialSubject.type === 'origin') {\n            current = null;\n          } else {\n            current = prev;\n          }\n        }\n        setOpFeedback(\"Traced back \" + i + \" Verifiable Presentation Diffusion\");\n        setTraceLen(i);\n        setChainOfVP(history);\n      } catch (error) {\n        console.error('Error tracing back:', error);\n        setOpFeedback(\"Error in VP traceback\");\n      }\n      try {\n        // fetch Statement VC\n        console.log(\"trying to get\" + decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url);\n        response = await axios.get(`${addressIPFSAgent}/retrieve`, {\n          timeout: 120000,\n          //2 min wait max\n          params: {\n            cid: decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url\n          }\n        });\n        console.log(\"responded\" + response.data.result);\n        //let string_jwt_of_prev = (response.data.result)\n        //string_jwt_of_prev.replace('\\\\','')\n        jwt_of_prev = response.data.result;\n        console.log(\"result got\" + jwt_of_prev);\n        setOpFeedback(\"Decoding Statement VC\");\n        response = await axios.get(`${addressVeramoAgent}/decode_jwt`, {\n          timeout: 65000,\n          params: {\n            jwt: jwt_of_prev\n          }\n        });\n        console.log(\"post\");\n        setOpFeedback(\"Traced back \" + i + \" Verifiable Presentation Diffusion and Statement VC\");\n        VC = response.data;\n        console.log(\"vc is\" + JSON.stringify(VC));\n        setVerifiableCredentialStatement(VC);\n      } catch (error) {\n        console.error(\"error \" + error);\n        setOpFeedback(\"Error in VC statement trace back, maybe missing\");\n      }\n    };\n    /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"jwt-textarea\",\n      style: {\n        overflowX: 'auto',\n        width: '100%',\n        minHeight: '100px'\n      },\n      value: JSON.stringify(jsonVPsDiffusion, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1324,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      style: {\n        align: 'center',\n        textAlign: 'center',\n        width: '70vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-dids-data\",\n        children: \"Provide JWT of Diffusion Verifiable Presentation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Text JWT or QRCODE of JWT:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback-text\",\n        children: opFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-input-area\",\n        placeholder: \"Enter JWT\",\n        value: inputJWT,\n        onChange: e => setInputJWT(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1336,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '8vw'\n        },\n        children: /*#__PURE__*/_jsxDEV(FileUploader, {\n          handleChange: handleChange,\n          name: \"file\",\n          types: fileTypes,\n          style: {\n            width: '100%',\n            // Adjust the width as per your requirement\n            height: '100%',\n            // Adjust the height as per your requirement\n            objectFit: 'cover',\n            // Ensure the image fills the container\n            overflow: 'hidden',\n            // Hide any overflow to prevent cropping\n            maxWidth: '100%',\n            // Allow the image to grow larger than its original size\n            maxHeight: '100%' // Allow the image to grow larger than its original size\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1343,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1342,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: decodeJWTVerifiablePresentationsText,\n        children: \"Decode Diffusion VP Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: decodeJWTVerifiablePresentationsImg,\n        children: \"Decode Diffusion VP Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1365,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Trace Back after decoding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 17\n      }, this), decodedJWT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credential\",\n        children: [decodedJWT.verifiableCredential[0].credentialSubject.type && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credential\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"process-button\",\n            onClick: traceBack,\n            children: \"Trace Back to Statement Verifiable Credential\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1378,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"feedback-text\",\n            children: opFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1384,\n            columnNumber: 33\n          }, this), verifiableCredentialStatement && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"credential\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Statement Verifiable Credential\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1388,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              onClick: fetchSkillsFromVC,\n              children: \" Fetch Skills VC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1390,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1393,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              onClick: () => verifyStatementVC(verifiableCredentialStatement),\n              children: \"Verify Statement Verifiable Credential\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1394,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Result verification: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: risVC\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1398,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 41\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Issuance Date: \", verifiableCredentialStatement.issuanceDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1400,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Credential Type: \", verifiableCredentialStatement.type.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Issuer DID: \", verifiableCredentialStatement.issuer.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1402,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Holder DID: \", verifiableCredentialStatement.credentialSubject.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              readOnly: true,\n              className: \"input\",\n              value: JSON.stringify(verifiableCredentialStatement.credentialSubject, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1404,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-button\",\n              onClick: closeSkill,\n              children: \" Close Skills VC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1409,\n              columnNumber: 41\n            }, this), jsonDataVCSkills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credential\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Skill Credential from keywords\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1415,\n                columnNumber: 49\n              }, this), jsonDataVCSkills.map((credential, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"credential\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Skill Credential #\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"process-button\",\n                  onClick: () => verifySkill(credential, index),\n                  children: \" Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1420,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Verification Result: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: verificationResSkill.at(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1423,\n                    columnNumber: 81\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1423,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuance Date: \", credential.issuanceDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1425,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Credential Type: \", credential.type.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1426,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuer DID: \", credential.issuer.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1427,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holder DID: \", credential.credentialSubject.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1428,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  readOnly: true,\n                  className: \"input\",\n                  value: JSON.stringify(credential.credentialSubject, null, 2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1429,\n                  columnNumber: 57\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1418,\n                columnNumber: 53\n              }, this))]\n            }, 'cred', true, {\n              fileName: _jsxFileName,\n              lineNumber: 1414,\n              columnNumber: 45\n            }, this), jsonDataVCSkills2.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credential\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Skill Credential similar keyword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1440,\n                columnNumber: 49\n              }, this), jsonDataVCSkills2.map((credential, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"credential\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Skill Credential #\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1444,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"process-button\",\n                  onClick: () => verifySkill(credential, index),\n                  children: \" Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1445,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Verification Result: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: verificationResSkill.at(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1448,\n                    columnNumber: 81\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1448,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuance Date: \", credential.issuanceDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1450,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Credential Type: \", credential.type.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuer DID: \", credential.issuer.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holder DID: \", credential.credentialSubject.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1453,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  readOnly: true,\n                  className: \"input\",\n                  value: JSON.stringify(credential.credentialSubject, null, 2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1454,\n                  columnNumber: 57\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 53\n              }, this))]\n            }, 'cred', true, {\n              fileName: _jsxFileName,\n              lineNumber: 1439,\n              columnNumber: 45\n            }, this), jsonDataVCSkills3.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"credential\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Skill Credential higher concept keyword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1465,\n                columnNumber: 49\n              }, this), jsonDataVCSkills3.map((credential, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"credential\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Skill Credential #\", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1469,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"process-button\",\n                  onClick: () => verifySkill(credential, index),\n                  children: \" Verify\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1470,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Verification Result: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: verificationResSkill.at(index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1473,\n                    columnNumber: 81\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1473,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuance Date: \", credential.issuanceDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1475,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Credential Type: \", credential.type.join(', ')]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1476,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Issuer DID: \", credential.issuer.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1477,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Holder DID: \", credential.credentialSubject.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1478,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  readOnly: true,\n                  className: \"input\",\n                  value: JSON.stringify(credential.credentialSubject, null, 2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1479,\n                  columnNumber: 57\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1468,\n                columnNumber: 53\n              }, this))]\n            }, 'cred', true, {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 45\n            }, this)]\n          }, 'cred', true, {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 37\n          }, this)]\n        }, 'decodedJWT2', true, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decoded Diffusion VP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1493,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Discovered distance from origin: \", traceLen]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1494,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"process-button\",\n          onClick: () => verifyVPDecoded(decodedJWT),\n          children: \" Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Result verification: \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: risVerDecoded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1498,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", decodedJWT.verifiableCredential[0].credentialSubject.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Issuance Date: \", decodedJWT.issuanceDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"UUID of VP: \", decodedJWT.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"URL or CID on IPFS of prev JWT URL: \", decodedJWT.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1504,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"VC statement CID or URL: \", decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1506,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Holder DID: \", decodedJWT.holder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Host URL: \", decodedJWT.verifiableCredential[0].credentialSubject.host_URL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1510,\n          columnNumber: 25\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Prev UUID: \", decodedJWT.verifiableCredential[0].credentialSubject.prev_vp_uuid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1512,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"JWT of Diffusion VP for next Diffusion VP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1514,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"jwt-textarea\",\n          style: {\n            overflowX: 'auto',\n            width: '90%',\n            minHeight: '100px'\n          },\n          value: decodedJWT.proof.jwt,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1515,\n          columnNumber: 25\n        }, this), chainOfVP && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"credential\",\n          children: chainOfVP.map((presentation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"credential\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Diffusion VP with distance from origin: \", traceLen - (index + 1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"process-button\",\n              onClick: () => verifyVPDiffusion(presentation, index),\n              children: \" Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1526,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Verification Result: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: verificationResDiffusion.at(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1529,\n                columnNumber: 65\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Type: \", presentation.verifiableCredential[0].credentialSubject.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1531,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Issuance Date: \", presentation.issuanceDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1532,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"UUID of VP: \", presentation.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1534,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"URL or CID on IPFS of prev JWT URL: \", presentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1536,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"VC statement CID or URL: \", presentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1540,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"Holder DID: \", presentation.holder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1544,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"Host URL: \", presentation.verifiableCredential[0].credentialSubject.host_URL]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1546,\n              columnNumber: 45\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                overflowX: 'auto',\n                width: '100%',\n                minHeight: 'auto'\n              },\n              children: [\"Prev UUID: \", presentation.verifiableCredential[0].credentialSubject.prev_vp_uuid]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1548,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"JWT of Diffusion VP #\", index + 1, \" for next Diffusion VP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1551,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"jwt-textarea\",\n              style: {\n                overflowX: 'auto',\n                width: '90%',\n                minHeight: '100px'\n              },\n              value: presentation.proof.jwt,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1553,\n              columnNumber: 45\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 37\n          }, this))\n        }, 'decodedJWT', false, {\n          fileName: _jsxFileName,\n          lineNumber: 1521,\n          columnNumber: 29\n        }, this)]\n      }, 'decodedJWT1', true, {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1569,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1568,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: fetchVerifiablePresentations,\n        children: \"Fetch Diffusion VP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1571,\n        columnNumber: 17\n      }, this), jsonVPsDiffusion.map((presentation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credential\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Diffusion VP #\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1574,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1575,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Issuance Date: \", presentation.verifiablePresentation.issuanceDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1576,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"UUID of VP: \", presentation.verifiablePresentation.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1578,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"URL or CID on IPFS of prev JWT URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"VC statement CID or URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1582,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Holder DID: \", presentation.verifiablePresentation.holder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1584,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Host URL: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.host_URL]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 29\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowX: 'auto',\n            width: '100%',\n            minHeight: 'auto'\n          },\n          children: [\"Prev UUID: \", presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.prev_vp_uuid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"JWT of Diffusion VP #\", index + 1, \" for next Diffusion VP\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1591,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"jwt-textarea\",\n          style: {\n            overflowX: 'auto',\n            width: '90%',\n            minHeight: '100px'\n          },\n          value: presentation.verifiablePresentation.proof.jwt,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1573,\n        columnNumber: 25\n      }, this)), jsonVPsDiffusion.length > 0 && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"jwt-textarea\",\n        style: {\n          overflowX: 'auto',\n          width: '100%',\n          minHeight: '100px'\n        },\n        value: JSON.stringify(jsonVPsDiffusion, null, 2),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1331,\n      columnNumber: 13\n    }, this);\n  };\n  _s5(ReaderVerifier, \"7O9ghe4pMNDvvHYjBxzGcpXDpHo=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [dids.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Dids of Agent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1622,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: newDID,\n        children: \"Generate new DID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1623,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1621,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-dids-data\",\n        children: \"Select DID from wallet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1630,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dids-select\",\n        value: selectedDid,\n        onChange: e => setSelectedDid(e.target.value),\n        children: dids.map((did, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: did,\n          children: did\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1637,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: newDID,\n        children: \"Generate new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1642,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-dids-data\",\n        children: \"Select DID from wallet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1645,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dids-select\",\n        value: selectedDid,\n        onChange: e => setSelectedDid(e.target.value),\n        children: dids.map((did, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: did,\n          children: did\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1646,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: newDID,\n        children: \"Generate new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1657,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1629,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title-dids-data\",\n        children: \"Choose role:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dids-select\",\n        value: selectedRole,\n        onChange: e => setSelectedRole(e.target.value),\n        children: roles.map((r, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r,\n          children: r\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1673,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1665,\n      columnNumber: 17\n    }, this), selectedDid && selectedRole === \"CertificateIssuer\" ? /*#__PURE__*/_jsxDEV(CertificateIssuerForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1683,\n      columnNumber: 21\n    }, this), selectedDid && selectedRole === \"CAVS\" ? /*#__PURE__*/_jsxDEV(CavsComponentPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1687,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1689,\n      columnNumber: 21\n    }, this), selectedDid && selectedRole === \"AuthorHolder\" ? /*#__PURE__*/_jsxDEV(AuthorHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1698,\n      columnNumber: 25\n    }, this), selectedDid && selectedRole === \"Spreader\" ? /*#__PURE__*/_jsxDEV(Spreader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1702,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1704,\n      columnNumber: 25\n    }, this), selectedDid && selectedRole === \"ReaderVerifier\" ? /*#__PURE__*/_jsxDEV(ReaderVerifier, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1710,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1712,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dids-data\",\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          htmlFor: \"skillUri\",\n          children: \"QRCODE from JWT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          id: \"verifiableCredentialHash1\",\n          value: verifiableCredentialHash1,\n          onChange: e => setVerifiableCredentialHash1(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1717,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1715,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: getQR,\n        children: \"Get QRCODE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/png;base64,${image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1728,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1730,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1714,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1619,\n    columnNumber: 13\n  }, this);\n}\n_s6(App, \"wTtDMRPJv7OAdc1y6uDXpPlO6Fc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","config","secret","axios","FileUploader","jsxDEV","_jsxDEV","App","_s6","_s","$RefreshSig$","_s2","_s3","_s4","_s5","roles","selectedRole","setSelectedRole","addressVeramoAgent","veramoagent","addressIPFSAgent","ipfsagent","peerIDIPFS","setPeerIDIPFS","addressTextProcessor","textprocessor","addressSkillProcessor","skillprocessor","addressCAVS","cavsendpoint","dids","setDids","selectedDid","setSelectedDid","image","setImage","verifiableCredentialHash1","setVerifiableCredentialHash1","fetch","name","password","then","response","ok","Error","json","data","console","log","peer_id","catch","error","length","getQR","event","type","post","jwt","responseType","timeout","base64","btoa","Uint8Array","reduce","byte","String","fromCharCode","newDID","get","newdids","did","AuthorHolder","jsonDataVCSkills","setJsonDataVCSkills","jsonDataVCStatement","setjsonDataVCStatement","selectedCredentials","setSelectedCredentials","statementText","setStatementText","opFeedback","setOpFeedback","hostURLStatement","setHostURLStatement","categoryStatement","setCategoryStatement","typeStatement","selectedTypeStatement","setSelectedTypeStatement","listCIDs","setListCIDs","handleCheckboxChange","index","target","checked","filter","item","sendToCavs","credentials","at","i","push","verifiableCredential","document","category","hostURL","holderDID","headers","fetchCredentials","params","fetchStatementCredentials","ipfsPublish","id","text","proof","CID","updatedListCIDs","className","style","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","credential","width","height","includes","onChange","hash","issuanceDate","join","issuer","credentialSubject","readOnly","value","JSON","stringify","htmlFor","e","typeS","placeholder","Spreader","hostURLPresentation","setHostURLPresentation","selectedTypePresentation","setSelectedTypePresentation","cidOfStatementVC","setCidOfStatementVC","prevUUID","setPrevUUID","prevJWT","setPrevJWT","jwtGot","setJwtGot","typePresentation","jsonVPsDiffusion","setJsonVPsDiffusion","createPresentationOrigin","holder","attributes","statement_vc_cid_or_url","prev_vp_uuid","url_or_cid_jwt_prev","host_URL","assertion","store","createPresentationDiffusion","obj","cid","fetchVerifiablePresentations","align","typeP","overflowX","minHeight","presentation","verifiablePresentation","CertificateIssuerForm","setHolderDID","holderURL","setHolderURL","certificateText","setCertificateText","skillName","setSkillName","skillUri","setSkillUri","skills","setSkills","extractorEngines","setExtractorEngines","selectedEngine","setSelectedEngine","setEnricherEngines","setSelectedEnricherEngine","skillExtractorEngines","setSkillExtractorEngines","selectedSkillExtractorEngine","setSelectedSkillExtractorEngine","skills_engines","extractor_engines","enricher_engines","extractSkillsAndAdd","engine","currentKeywords","keywords","keyword","skillPairs","skill","addSkill","issueCredential","key","color","backgroundColor","href","rel","CavsComponentPanel","processingFeedback","setProcessingFeedback","statementVC","selectedKeywordsEngine","setSelectedKeywordsEngine","enricherEngines","selectedEnricherEngine","selectedEnginesString","setSelectedEnginesString","changeOP","setChangeOP","updateConfig","extractorEngine","enricherEngine","skillExtractorEngine","selectedExtractorEngine","ReaderVerifier","setFile","readData","setReadData","handleChange","file","reader","FileReader","readAsDataURL","onload","result","replace","fileTypes","inputJWT","setInputJWT","decodedJWT","setDecodedJWT","chainOfVP","setChainOfVP","verifiableCredentialStatement","setVerifiableCredentialStatement","jsonDataVCSkills2","setJsonDataVCSkills2","jsonDataVCSkills3","setJsonDataVCSkills3","verificationResSkill","setVerificationResSkill","traceLen","setTraceLen","verificationResDiffusion","setVerificationResDiffusion","verify_VC","vc","res","verifyVPDiffusion","vp","updatedverificationResDiffusion","verval","verify_VP","toString","verifySkill","cred","updatedVerificationResSkill","risVerDecoded","setRisVerDecoded","verifyVPDecoded","risVC","setRisVC","verifyStatementVC","decodeJWTVerifiablePresentationsText","decodeJWTVerifiablePresentationsImg","img_data","fetchSkillsFromVC","credentials_for_skills","credentials_for_similar_concepts_skills","credentials_for_general_concepts_skills","closeSkill","traceBack","history","current","prev","jwt_of_prev","VC","parse","display","justifyContent","alignItems","types","objectFit","overflow","maxWidth","maxHeight","r","src","_c","$RefreshReg$"],"sources":["/home/cal/componentsCAVS/veramoAgent/client/src/App.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport \"./App.css\";\nimport config from \"./config.json\"\nimport secret from \"./secret.json\"\n\nimport axios from \"axios\";\nimport { FileUploader } from \"react-drag-drop-files\";\n\nfunction App() {\n\n    const roles = [\"CertificateIssuer\",\"CAVS\",\"AuthorHolder\",\"Spreader\",\"ReaderVerifier\"]\n    const [selectedRole,setSelectedRole] = useState(\"CertificateIssuer\")\n\n    const [addressVeramoAgent] = useState(config.veramoagent);\n    const [addressIPFSAgent] = useState(config.ipfsagent);\n\n\n    const [peerIDIPFS,setPeerIDIPFS] = useState('')\n    const [addressTextProcessor] = useState(config.textprocessor);\n    const [addressSkillProcessor] = useState(config.skillprocessor);\n\n    const [addressCAVS] = useState(config.cavsendpoint);\n\n    const [dids, setDids] = useState([]);\n    const [selectedDid, setSelectedDid] = useState(config.veramoagent);\n\n\n    const [image, setImage] = useState(\"\")\n    const [verifiableCredentialHash1, setVerifiableCredentialHash1] = useState(\"\")\n\n\n\n\n\n\n\n// Load IPFS PeerID\n    useEffect(() => {\n        fetch(`${addressIPFSAgent}/set_secrets?name=${secret.name}&psw=${secret.password}`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to set secrets on IPFS agent');\n                }\n                // If the set_secrets request is successful, fetch the PeerID\n                return fetch(`${addressIPFSAgent}/peer_id`);\n            })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Failed to get PeerID from IPFS agent');\n                }\n                // If the peer_id request is successful, parse the response body as JSON\n                return response.json();\n            })\n            .then(data => {\n                // Access the parsed JSON data and log the PeerID\n                console.log('Received PeerID:', data.peer_id);\n                // Do whatever you want with the PeerID, like setting it in state\n                setPeerIDIPFS(data.peer_id);\n            })\n            .catch(error => {\n                console.error('Error during IPFS PeerID fetch:', error);\n            });\n    }, [addressIPFSAgent, secret]);\n\n    // Use useEffect for fetching data using the obtained addressVeramoAgent\n    useEffect(() => {\n        if (addressVeramoAgent) {\n            fetch(addressVeramoAgent + \"/get_own_did\")\n                .then(response => response.json())\n                .then(data => {\n                    if (data.dids.length !== 0) {\n                        setDids(data.dids)\n                        setSelectedDid(data.dids[0])\n                    }\n                })\n                .catch(error => {\n                    console.error('Error fetching data:', error);\n                });\n        }\n    }, [addressVeramoAgent]); // Ensure that [addressVeramoAgent] is included in the dependency array\n    // get qr code\n    const getQR = async event => {\n        console.log(\"here\")\n        if (event.type === 'click') {\n            if (verifiableCredentialHash1) {\n                const response = await axios.post(`${addressVeramoAgent}/get_qr_code/jwt`, {\n                    jwt: verifiableCredentialHash1\n                }, {\n                    responseType: 'arraybuffer', // Set the response type to arraybuffer\n                    timeout: 65000\n                });\n\n                console.log(\"post request\")\n                const base64 = btoa(\n                    new Uint8Array(response.data).reduce(\n                        (data, byte) => data + String.fromCharCode(byte),\n                        ''\n                    )\n                )\n                setImage(base64)\n\n                console.log(\"hello\" + response.data)\n            }\n        }\n\n    };\n\n\n\n    const newDID = async () =>{\n        try {\n            const response = await axios.get(`${addressVeramoAgent}/create_did`, {\n                timeout: 65000,\n            });\n            let newdids = [...dids,response.data.did]\n            setDids(newdids) //update list\n            setSelectedDid(newdids[0])\n\n        } catch (error) {\n            console.error('Error fetching credentials:', error);\n        }\n    }\n    const AuthorHolder = () => {\n        const [jsonDataVCSkills, setJsonDataVCSkills] = useState('');\n\n        const [jsonDataVCStatement, setjsonDataVCStatement] = useState('');\n\n        const [selectedCredentials, setSelectedCredentials] = useState([]);\n        const [statementText, setStatementText] = useState(\"\")\n        const [opFeedback,setOpFeedback] = useState(\"Ready to Request\")\n        const [hostURLStatement,setHostURLStatement] = useState(\"\")\n        const [categoryStatement,setCategoryStatement] = useState(\"\")\n        const [typeStatement] = useState([\"News\",\"Article\",\"Rumor\",\"Comment\",\"Opinion\",\"Leak\",\"Blog\",\"Post\"])\n        const [selectedTypeStatement,setSelectedTypeStatement] = useState(typeStatement[0])\n\n        const [listCIDs,setListCIDs] = useState([])\n\n\n        // Function to handle checkbox selection\n        const handleCheckboxChange = (event, index) => {\n            console.log(selectedCredentials)\n            if (event.target.checked) {\n                //insert element\n                setSelectedCredentials([...selectedCredentials, index]);\n            } else {\n                //remove element\n                setSelectedCredentials(selectedCredentials.filter(item => item !== index));\n            }\n        };\n\n        // Function to fetch credentials\n        const sendToCavs = async () => {\n            let credentials = []\n            console.log(jsonDataVCSkills.at(0))\n            if (selectedCredentials.length === 0){\n                setOpFeedback(\"Please select VCs\")\n                return;\n            }\n            for (let i = 0; i < selectedCredentials.length; i++) {\n                credentials.push(jsonDataVCSkills.at(selectedCredentials.at(i)).verifiableCredential)\n            }\n            console.log(credentials)\n            setOpFeedback(\"Processing creation of Statement VC\");\n\n            try {\n\n                let response = await axios.post(\n                    `${addressCAVS}/api/vc`,\n                    {\n                        document:statementText,\n                        credentials:credentials,\n                        typeStatement:selectedTypeStatement,\n                        category:categoryStatement,\n                        hostURL:hostURLStatement,\n                        holderDID:selectedDid\n                    },\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        timeout: 65000\n                    }\n                );\n                console.log(response)\n\n\n                setOpFeedback(\"Got VC Statement, storing in wallet\");\n\n                response = await axios.post(`${addressVeramoAgent}/store_vc`, {\n                    verifiableCredential: response.data.jwt\n                }, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    timeout: 650000\n                });\n                console.log(response)\n                setStatementText(\"\")\n                setCategoryStatement(\"\")\n                setHostURLStatement(\"\")\n\n\n\n                setOpFeedback(\"Done\")\n\n            } catch (error) {\n                console.error('Error obtain credentials:', error);\n            }\n        };\n        const fetchCredentials = async() => {\n            try {\n                const response = await axios.get(`${addressVeramoAgent}/list_verifiable_credentials_with_type`, {\n                    timeout: 65000,\n                    params: {\n                        type: \"ESCO_type_VerifiableCredential\"\n                    }\n                });\n                setJsonDataVCSkills(response.data);\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n            }\n\n        };\n\n        const fetchStatementCredentials= async() => {\n            try {\n                const response = await axios.get(`${addressVeramoAgent}/list_verifiable_credentials_with_type`, {\n                    timeout: 65000,\n                    params: {\n                        type: \"StatementVerifiableCredential\"\n                    }\n                });\n                setjsonDataVCStatement(response.data);\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n            }\n\n        };\n\n        const ipfsPublish= async(id) => {\n            try {\n                let response = await axios.post(\n                    `${addressIPFSAgent}/upload`,\n                    {\n                        //sending jwt\n                        text:jsonDataVCStatement[id].verifiableCredential.proof.jwt\n                    },\n                    {\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        timeout: 65000\n                    }\n                        );\n\n                        console.log(\"received response\"+ response.data.CID)\n                        const updatedListCIDs = [...listCIDs]; // Create a copy of the array\n                        updatedListCIDs[id] = response.data.CID; // Update the value at the specified index\n                        console.log(\"id:\" + id);\n                        console.log(\"updated CID at index \" + id + \": \" + updatedListCIDs[id]);\n                        setListCIDs(updatedListCIDs); // Update the state with the new array\n                    } catch (error) {\n                console.error('Error publishing on IPFS or fetching:', error);\n            }\n\n        };\n\n        return (\n            <div className=\"dids-data\" style={{textAlign:'center'}}>\n                <button className=\"process-button\" onClick={fetchCredentials}>Fetch ESCO Skills Verifiable Credential\n                </button>\n                {jsonDataVCSkills && (\n                    <div className=\"credentials-list-container\">\n                        <p>Select Credentials for VC</p>\n\n                        {jsonDataVCSkills.map((credential, index) => (\n                            <div key={index} className=\"credential\">\n                                <input\n                                    style={{width:'2vw', height:'2vw'}} // Set the width and height\n                                    type=\"checkbox\"\n                                    checked={selectedCredentials.includes(index)}\n                                    onChange={(event) => handleCheckboxChange(event, index)}\n                                />\n                                <h3>Credential #{index + 1}</h3>\n                                <p>Hash: {credential.hash}</p>\n                                <p>Issuance Date: {credential.verifiableCredential.issuanceDate}</p>\n                                <p>Credential Type: {credential.verifiableCredential.type.join(', ')}</p>\n                                <p>Issuer DID: {credential.verifiableCredential.issuer.id}</p>\n                                <p>Holder DID: {credential.verifiableCredential.credentialSubject.id}</p>\n                                <textarea\n                                    readOnly={true}\n                                    className=\"input\"\n                                    value={JSON.stringify(credential.verifiableCredential.credentialSubject, null, 2)}\n                                />\n                            </div>\n                        ))}\n                        <div>\n                            <p>Selected Credentials: {selectedCredentials.length}</p>\n                        </div>\n                    </div>\n                )}\n                <label className=\"form-label\" htmlFor=\"holderURL\">Statement Category(Economics, Medicine,\n                    Science..)</label>\n                <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    id=\"holderURL\"\n                    value={categoryStatement}\n                    onChange={(e) => setCategoryStatement(e.target.value)}\n                />\n                <label className=\"form-label\" htmlFor=\"holderURL\">Statement Host URL</label>\n                <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    id=\"holderURL\"\n                    value={hostURLStatement}\n                    onChange={(e) => setHostURLStatement(e.target.value)}\n                />\n                <label className=\"form-label\" htmlFor=\"holderURL\">Statement Type:</label>\n                <select\n                    className=\"select-box\"\n                    value={selectedTypeStatement}\n                    onChange={(e) => {setSelectedTypeStatement(e.target.value); }  }\n                >\n                    {typeStatement.map((typeS, i) => (\n                        <option key={i} value={typeS}>\n                            {typeS}\n                        </option>\n                    ))}\n                </select>\n\n                <label className=\"form-label\" htmlFor=\"holderURL\">Statement:</label>\n\n                <textarea\n                    className=\"form-input-area\"\n                    placeholder=\"Enter Statement\"\n                    value={statementText}\n                    onChange={(e) => setStatementText(e.target.value)}\n                />\n                <button className=\"process-button\" onClick={sendToCavs}>Send to CAVS\n                </button>\n                <p className=\"feedback-text\">{opFeedback}</p>\n                <div></div>\n                <button className=\"process-button\" onClick={fetchStatementCredentials}> Fetch StatementVerifiableCredentials\n                </button>\n\n                {jsonDataVCStatement && (\n                    <div className=\"credentials-list-container\">\n                        {jsonDataVCStatement.map((credential, index) => (\n                            <div key={index} className=\"credential\">\n\n\n                                <button className=\"process-button\" onClick={() => ipfsPublish(index)}> Publish/Get on\n                                    IPFS\n                                </button>\n\n                                <h3>Credential #{index + 1}</h3>\n                                {listCIDs[index]? (\n                                    <h3>CID is defined: {listCIDs[index]}</h3>\n                                ) : (\n                                    <h3>CID is unkwown</h3>\n                                )}\n                                <p>Hash: {credential.hash}</p>\n                                <p>Issuance Date: {credential.verifiableCredential.issuanceDate}</p>\n                                <p>Credential Type: {credential.verifiableCredential.type.join(', ')}</p>\n                                <p>Issuer DID: {credential.verifiableCredential.issuer.id}</p>\n                                <p>Holder DID: {credential.verifiableCredential.credentialSubject.id}</p>\n                                <textarea\n                                    readOnly={true}\n                                    className=\"input\"\n                                    value={JSON.stringify(credential.verifiableCredential.credentialSubject, null, 2)}\n                                />\n                            </div>\n                        ))}\n                    </div>\n\n                )}\n                <Spreader/>\n\n\n            </div>\n        );\n    };\n\n\n    const Spreader = () => {\n        const [hostURLPresentation, setHostURLPresentation] = useState('');\n        const [selectedTypePresentation, setSelectedTypePresentation] = useState('Origin');\n        const [cidOfStatementVC, setCidOfStatementVC] = useState('');\n        const [prevUUID, setPrevUUID] = useState('')\n        const [prevJWT, setPrevJWT] = useState('')\n\n        const [opFeedback,setOpFeedback] = useState('Ready To Create')\n        const [jwtGot,setJwtGot] = useState('')\n\n        const typePresentation = [\"Origin\", \"Diffusion\"]; // Define your array of presentation types\n\n        const [jsonVPsDiffusion,setJsonVPsDiffusion] = useState([])\n        const createPresentationOrigin = async () => {\n            if (hostURLPresentation && selectedTypePresentation && cidOfStatementVC) {\n\n                try {\n\n                    let response = await axios.post(`${addressVeramoAgent}/issue_verifiable_presentation/holder_claim`, {\n                        holder:selectedDid,\n                        type:\"StatementDiffusion_VPv01\",\n                        attributes:(\n                            {statement_vc_cid_or_url:cidOfStatementVC,\n                                prev_vp_uuid:\"\",//jwt of prev_vp, empty if origin\n                                url_or_cid_jwt_prev:\"\",\n                                type:\"origin\",//first presentation that refers to statement vc, else diffusion\n                                host_URL : hostURLPresentation\n                            }\n                        ),\n                        assertion:\"This VP is submitted by the subject as evidence of VC propagation\",\n                        store:true //store it too\n                    }, {\n                        headers:{\n                            'Content-Type':'application/json'\n                        }, timeout:65000\n                    });\n                    console.log(\"post request\")\n                    console.log(response.data.jwt)\n                    setOpFeedback(\"Created VP, below jwt\")\n                    setJwtGot(response.data.jwt)\n                } catch (error) {\n                    setOpFeedback(\"Error occurres\")\n                }\n            }\n        else {\n            setOpFeedback(\"Omitted Field/s\")\n\n        }\n    };\n\n        const createPresentationDiffusion = async () => {\n            if (hostURLPresentation && selectedTypePresentation && cidOfStatementVC && prevUUID) {\n                try {\n                    setOpFeedback(\"Loading previous VP obtained to IPFS with own PeerID\");\n\n                    let obj = {};\n                    obj[prevUUID] = prevJWT;\n                    let text = JSON.stringify(obj);\n\n                    let response = await axios.post(`${addressIPFSAgent}/upload`, {\n                        text:text //store mapping between UUID of prev and its JWT\n                    }, {\n                        headers:{\n                            'Content-Type':'application/json'\n                        }, timeout:120000 //2 minutes fair limit\n                    });\n                    let cid = (response.data.CID)\n\n                    console.log(\"here is the cid\"+cid)\n\n                    setOpFeedback(\"Done loading previous VP, creating new VP\");\n\n                    response = await axios.post(`${addressVeramoAgent}/issue_verifiable_presentation/holder_claim`, {\n                        holder:selectedDid,\n                        type:\"StatementDiffusion_VPv01\",\n                        attributes:(\n                            {\n                                statement_vc_cid_or_url:cidOfStatementVC,\n                                prev_vp_uuid:prevUUID,//jwt of prev_vp, empty if origin\n                                url_or_cid_jwt_prev:cid,\n                                type:\"diffusion\",//first presentation that refers to statement vc, else diffusion,\n                                host_URL : hostURLPresentation\n                            }\n                        ),\n                        assertion:\"This VP is submitted by the subject as evidence of VC propagation\",\n                        store:true //store it too\n                    }, {\n                        headers:{\n                            'Content-Type':'application/json'\n                        }, timeout:65000\n                    });\n                    console.log(\"post request\")\n                    console.log(response.data.jwt)\n                    setOpFeedback(\"Created VP, below jwt\")\n                    setJwtGot(response.data.jwt)\n                } catch (error) {\n                    setOpFeedback(\"Error occurres\")\n                }\n            } else {\n                setOpFeedback(\"Omitted Field/s\")\n\n            }\n        };\n\n        const fetchVerifiablePresentations = async () => {\n            try {\n                const response = await axios.get(`${addressVeramoAgent}/list_verifiable_presentations_with_type`, {\n                    timeout:65000,\n                    params:{\n                        type:\"StatementDiffusion_VPv01\"\n                    }\n                });\n                console.log(response.data)\n                setJsonVPsDiffusion(response.data);\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n            }\n\n        };\n\n        return (<div className=\"dids-data\" style={{align:'center', textAlign:'center', width:'57vw'}}>\n            <p className=\"form-label\">PeerID on IPFS:{peerIDIPFS}</p>\n            <p className=\"title-dids-data\">Create Diffusion Verifiable Presentation:</p>\n            <label className=\"form-label\" htmlFor=\"holderURL\">Presentation Host URL</label>\n            <input\n                type=\"text\"\n                className=\"form-input\"\n                id=\"holderURL\"\n                value={hostURLPresentation}\n                onChange={(e) => setHostURLPresentation(e.target.value)}\n            />\n            <label className=\"form-label\" htmlFor=\"holderURL\">Presentation Type:</label>\n            <select\n                className=\"select-box\"\n                value={selectedTypePresentation}\n                onChange={(e) => {\n                    setSelectedTypePresentation(e.target.value);\n                }}\n            >\n                {typePresentation.map((typeP, i) => (<option key={i} value={typeP}>\n                    {typeP}\n                </option>))}\n            </select>\n\n            {(selectedTypePresentation === 'Origin' || selectedTypePresentation === 'Diffusion') && (<div>\n                <label className=\"form-label\" htmlFor=\"holderURL\">CID of Statement Verifiable Credential</label>\n                <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    id=\"cidStatement\"\n                    value={cidOfStatementVC}\n                    onChange={(e) => setCidOfStatementVC(e.target.value)}\n                /> {selectedTypePresentation === 'Origin' && (\n                <button className=\"process-button\" onClick={createPresentationOrigin}>Create Origin\n                    Presentation\n                </button>)}\n            </div>)}\n            {selectedTypePresentation === 'Diffusion' && (<div>\n                <label className=\"form-label\" htmlFor=\"holderURL\">UUID of Previous Presentation</label>\n                <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    id=\"uuidPrev\"\n                    value={prevUUID}\n                    onChange={(e) => setPrevUUID(e.target.value)}\n                />\n                <label className=\"form-label\" htmlFor=\"holderURL\">JWT of Previous Presentation</label>\n                <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    id=\"uuidPrev\"\n                    value={prevJWT}\n                    onChange={(e) => setPrevJWT(e.target.value)}\n                />\n\n                <button className=\"process-button\" onClick={createPresentationDiffusion}>Create Diffusion\n                    Presentation\n                </button>\n            </div>)}\n            <p className=\"feedback-text\">{opFeedback}</p>\n            {jwtGot && (\n                <textarea\n                    className=\"jwt-textarea\"\n                    style={{overflowX:'auto', width:'100%', minHeight:'100px'}}\n                    value={jwtGot}\n                    readOnly\n                />\n            )}\n            <button className=\"process-button\" onClick={fetchVerifiablePresentations}>Fetch Diffusion VP</button>\n            {jsonVPsDiffusion.map((presentation, index) => (\n                    <div key={index} className=\"credential\">\n                        <h3>Diffusion VP #{index + 1}</h3>\n                        <p>Type: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.type}</p> {/* Type from Credential Subject */}\n                        <p>Issuance\n                            Date: {presentation.verifiablePresentation.issuanceDate}</p> {/* Issuance Date from VP */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>UUID of\n                            VP: {presentation.verifiablePresentation.id}</h3> {/* UUID from Issuer DID */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>URL or CID on IPFS of prev JWT\n                            URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev}</h3> {/* vc_statement_cid_or_url */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>VC statement CID or\n                            URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url}</h3> {/* vc_statement_cid_or_url */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Holder\n                            DID: {presentation.verifiablePresentation.holder}</p> {/* Holder DID */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Host\n                            URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.host_URL}</p> {/* HostURL */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Prev\n                            UUID: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.prev_vp_uuid}</p>\n\n                        <h3>JWT of Diffusion VP #{index + 1} for next Diffusion VP</h3>\n\n                        <textarea\n                            className=\"jwt-textarea\"\n                            style={{overflowX:'auto', width:'90%', minHeight:'100px'}}\n                            value={presentation.verifiablePresentation.proof.jwt}\n                            readOnly/>\n\n\n                    </div>\n                )\n            )}\n            {jsonVPsDiffusion.length > 0 && (\n                <textarea\n                    className=\"jwt-textarea\"\n                    style={{overflowX:'auto', width:'100%', height:'10vw'}}\n                    value={JSON.stringify(jsonVPsDiffusion, null, 2)}\n                    readOnly\n                />\n            )}\n\n\n        </div>);\n    };\n\n\n    const CertificateIssuerForm = () => {\n        const [holderDID, setHolderDID] = useState('');\n        const [holderURL, setHolderURL] = useState('');\n        const [certificateText, setCertificateText] = useState('');\n        const [skillName, setSkillName] = useState('');\n        const [skillUri, setSkillUri] = useState('');\n\n        const [skills, setSkills] = useState([])\n        const [opFeedback, setOpFeedback] = useState('Ready to Create Credential');\n\n        const [extractorEngines, setExtractorEngines] = useState([]);\n        const [selectedEngine, setSelectedEngine] = useState(''); // State to hold the selected engine\n\n        const [, setEnricherEngines] = useState([]);\n        const [, setSelectedEnricherEngine] = useState(''); // State to hold the selected engine\n\n        const [skillExtractorEngines, setSkillExtractorEngines] = useState([])\n        const [selectedSkillExtractorEngine, setSelectedSkillExtractorEngine] = useState([])\n\n\n        useEffect(() => {\n            if (addressSkillProcessor) {\n                fetch(addressSkillProcessor + \"/api_skills\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.skills_engines.length !== 0) {\n                            setSkillExtractorEngines(data.skills_engines);\n                            setSelectedSkillExtractorEngine(data.skills_engines[0])\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n\n\n            }\n        }, [addressSkillProcessor]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n\n        // Use useEffect for fetching data using the obtained addressTextProcessor\n        useEffect(() => {\n            if (addressTextProcessor) {\n                fetch(addressTextProcessor + \"/api_extractor\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.extractor_engines.length !== 0) {\n                            setExtractorEngines(data.extractor_engines);\n                            setSelectedEngine(data.extractor_engines[0])\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n                fetch(addressTextProcessor + \"/api_enricher\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.enricher_engines.length !== 0) {\n                            setEnricherEngines(data.enricher_engines);\n                            setSelectedEnricherEngine(data.enricher_engines[0])\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n            }\n        }, [addressTextProcessor]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n        async function extractSkillsAndAdd() {\n            let response = await axios.get(`${addressTextProcessor}/extract`, {\n                timeout:65000, params:{\n                    document:certificateText, engine:selectedEngine\n                }\n            });\n            setOpFeedback(\"Extracted keywords, extracting skills\")\n\n            let currentKeywords = {keywords:response.data.keyword}\n\n            console.log(currentKeywords)\n            if (addressSkillProcessor && currentKeywords.keywords) {\n                let response = await axios.get(`${addressSkillProcessor}/keyword_to_skills`, {\n                    timeout:65000 * currentKeywords.keywords.length, params:{\n                        keywords:currentKeywords.keywords, engine:selectedSkillExtractorEngine\n                    }\n                });\n                console.log(response.data)\n                let skillPairs = response.data.skills.map(skill => [skill[1][0], skill[1][1]]);\n                skills.push(...skillPairs) //push all with 3 dots\n                setSkills(skills)\n                setOpFeedback(\"Ready to Create Credential\")\n            }\n        }\n\n        function addSkill() {\n            skills.push(...[[skillName, skillUri]])\n            setSkillName(\"\")\n            setSkillUri(\"\")\n            setSkills(skills)\n        }\n\n        //send credential issue request\n        const issueCredential = async event => {\n            if (event.key === 'Enter' || event.type === 'click' && holderURL && holderURL && skills) {\n                if (selectedDid && holderDID && skills) {\n                    console.log(\"pre request\")\n                    // Stringify the attributes object\n\n                    let response = await axios.post(`${addressVeramoAgent}/issue_verifiable_credential`, {\n                        issuer:selectedDid,\n                        holder:holderDID,\n                        type:\"ESCO_type_VerifiableCredential\",\n                        attributes:({skills:skills}),\n                        store:false\n                    }, {\n                        headers:{\n                            'Content-Type':'application/json'\n                        }, timeout:65000\n                    });\n                    console.log(\"post request\")\n                    console.log(response.data.jwt)\n                    setOpFeedback(\"Created Credential, sending to Holder\")\n\n                    response = await axios.post(`${holderURL}/store_vc`, {\n                        verifiableCredential:response.data.jwt\n                    }, {\n                        headers:{\n                            'Content-Type':'application/json'\n                        }, timeout:650000\n                    });\n                    console.log(response)\n                    setSkills([])\n                    setOpFeedback(\"Created Credential, create another\")\n                } else {\n                    setOpFeedback(\"Omitted Field/s\")\n\n                }\n\n            }\n        };\n\n\n        return (<div className=\"credential-form\">\n                <p className=\"section-title\">Issue Certificate Verifiable Credential:</p>\n                <div className=\"form-group\">\n                    <label className=\"form-label\" htmlFor=\"holderDID\">New Holder DID:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-input\"\n                        id=\"holderDID\"\n                        value={holderDID}\n                        onChange={(e) => setHolderDID(e.target.value)}\n                    />\n                    <label className=\"form-label\" htmlFor=\"holderURL\">New Holder Endpoint URL:</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-input\"\n                        id=\"holderURL\"\n                        value={holderURL}\n                        onChange={(e) => setHolderURL(e.target.value)}\n                    />\n                </div>\n\n\n                <p className=\"section-title\">Certificate Description To Skills</p>\n                <div className=\"form-group\">\n                <textarea\n                    className=\"form-input-area\"\n                    placeholder=\"Enter Certificate Description...\"\n                    value={certificateText}\n                    onChange={(e) => setCertificateText(e.target.value)}\n                />\n                    <div className=\"extractor-engines-data\">\n                        <p className=\"section-title\">Keyword Extractor Engines:</p>\n                        <select\n                            className=\"select-box\"\n                            value={selectedEngine}\n                            onChange={(e) => setSelectedEngine(e.target.value)}\n                        >\n                            {extractorEngines.map((engine, i) => (<option key={i} value={engine}>\n                                    {engine}\n                                </option>))}\n                        </select>\n\n                        <p className=\"section-title\">Skill Extractor Engines:</p>\n                        <select\n                            className=\"select-box\"\n                            value={selectedSkillExtractorEngine}\n                            onChange={(e) => setSelectedSkillExtractorEngine(e.target.value)}\n                        >\n                            {skillExtractorEngines.map((engine, i) => (<option key={i} value={engine}>\n                                    {engine}\n                                </option>))}\n                        </select>\n                        <button className=\"action-button\" onClick={extractSkillsAndAdd}>Extract Skills from Description\n                        </button>\n                    </div>\n                </div>\n\n                <p className=\"section-title\">Manual Skills Insertion</p>\n                <div className=\"form-group manual-skills-insertion\">\n                    <div className=\"skill-form-group\">\n                        <label className=\"form-label\" htmlFor=\"skillName\">Skill Name:</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-input\"\n                            id=\"skillName\"\n                            value={skillName}\n                            onChange={(e) => setSkillName(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"skill-form-group\">\n                        <label className=\"form-label\" htmlFor=\"skillUri\">Skill URI:</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-input\"\n                            id=\"skillUri\"\n                            value={skillUri}\n                            onChange={(e) => setSkillUri(e.target.value)}\n                        />\n                        <button className=\"action-button\" onClick={addSkill}>Add Skill</button>\n                    </div>\n                </div>\n\n                <ul className=\"keywords-list\">\n                    {skills.map((skill, i) => (<ul key={i} className=\"keywords-list-item\">\n                            <li><span\n                                style={{color:'blue', backgroundColor:'lightgrey'}}>Skill: </span> {skill[0]}\n                            </li>\n                            <li>\n                                <span style={{color:'blue', backgroundColor:'lightgrey'}}>Skill URI: </span>\n                                <a href={skill[1]} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    {skill[1]}\n                                </a>\n                            </li>\n\n                        </ul>))}\n                </ul>\n\n                <button className=\"action-button\" onClick={issueCredential}>Issue Verifiable Credential</button>\n                <p className=\"feedback-text\">{opFeedback}</p>\n            </div>);\n    };\n\n    const CavsComponentPanel = ({}) => {\n        const [processingFeedback, setProcessingFeedback] = useState('');\n        const [statementVC] = useState('');\n\n        const [extractorEngines, setExtractorEngines] = useState([]);\n        const [selectedKeywordsEngine, setSelectedKeywordsEngine] = useState(''); // State to hold the selected engine\n\n        const [enricherEngines, setEnricherEngines] = useState([]);\n        const [selectedEnricherEngine, setSelectedEnricherEngine] = useState(''); // State to hold the selected engine\n\n        const [skillExtractorEngines, setSkillExtractorEngines] = useState([])\n        const [selectedSkillExtractorEngine, setSelectedSkillExtractorEngine] = useState([])\n        // Combine selected engines into a string\n        const [selectedEnginesString, setSelectedEnginesString] = useState(\"\")\n        const [changeOP,setChangeOP] = useState(\"\")\n        useEffect(() => {\n            if (addressCAVS) {\n                fetch(addressCAVS + \"/api_skills\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.skills_engines.length !== 0) {\n                            setSkillExtractorEngines(data.skills_engines);\n                            setSelectedSkillExtractorEngine(data.skills_engines[0])\n                            setChangeOP(\"yes\")                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n            }\n        }, [addressCAVS]); // Ensure that [addressTextProcessor] is included in the dependency array\n\n        useEffect(() => {\n            if (addressCAVS) {\n                fetch(addressCAVS + \"/api_extractor\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.extractor_engines.length !== 0) {\n                            setExtractorEngines(data.extractor_engines);\n                            setSelectedKeywordsEngine(data.extractor_engines[0])\n                            setChangeOP(\"yes\")\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n                fetch(addressCAVS + \"/api_enricher\")\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.enricher_engines.length !== 0) {\n                            setEnricherEngines(data.enricher_engines);\n                            setSelectedEnricherEngine(data.enricher_engines[0])\n                        }\n                        setChangeOP(\"yes\")                    })\n                    .catch(error => {\n                        console.error('Error fetching data:', error);\n                    });\n            }\n        }, [addressCAVS]); // Ensure that [addressTextProcessor] is included in the dependency array\n        useEffect(() =>{\n            setSelectedEnginesString([selectedKeywordsEngine, selectedEnricherEngine, selectedSkillExtractorEngine].join(', '));\n            setChangeOP(\"\")\n        },[changeOP===\"yes\"]);\n        const updateConfig = async () => {\n            if (addressCAVS) {\n                try {\n                    const response = await axios.post(\n                        `${addressCAVS}/set_api`,\n                        {\n                            extractorEngine: selectedKeywordsEngine,\n                            enricherEngine: selectedEnricherEngine,\n                            skillExtractorEngine: selectedSkillExtractorEngine,\n                        },\n                        {\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            timeout: 65000\n                        }\n                    );\n\n                    setSelectedEnginesString([response.data.selectedExtractorEngine, response.data.selectedEnricherEngine, response.data.selectedSkillExtractorEngine].join(', '))\n                    console.log(\"did it\")\n                } catch (error) {\n                    console.error('Error updating config:', error);\n                    setProcessingFeedback(\"Error updating config\");\n                }\n            } else {\n                setProcessingFeedback(\"Omitted Field/s\");\n            }\n        };\n\n\n\n        return (\n            <div className=\"dids-data\">\n                <p className=\"section-title\">CAVS available at {addressCAVS}</p>\n\n                <div className=\"extractor-engines-data\">\n                    <p className=\"title-extractor-engines-data\">Extractor Engines:</p>\n                    <select\n                        className=\"extractor-engines-select\"\n                        value={selectedKeywordsEngine}\n                        onChange={(e) => setSelectedKeywordsEngine(e.target.value)}\n                    >\n                        {extractorEngines.map((engine, i) => (\n                            <option key={i} value={engine}>\n                                {engine}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"extractor-engines-data\">\n                    <p className=\"title-extractor-engines-data\">Enricher Engines:</p>\n                    <select\n                        className=\"extractor-engines-select\"\n                        value={selectedEnricherEngine}\n                        onChange={(e) => setSelectedEnricherEngine(e.target.value)}\n                    >\n                        {enricherEngines.map((engine, i) => (\n                            <option key={i} value={engine}>\n                                {engine}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"extractor-engines-data\">\n                    <p className=\"title-extractor-engines-data\">Skill Extractor Engines:</p>\n                    <select\n                        className=\"extractor-engines-select\"\n                        value={selectedSkillExtractorEngine}\n                        onChange={(e) => setSelectedSkillExtractorEngine(e.target.value)}\n                    >\n                        {skillExtractorEngines.map((engine, i) => (\n                            <option key={i} value={engine}>\n                                {engine}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <button className=\"process-button\" onClick={updateConfig}>\n                    Update Config\n                </button>\n                <p>Current Setup: {processingFeedback} {selectedEnginesString}</p>\n\n\n                {statementVC && (\n                    <textarea\n                        readOnly={true}\n                        className=\"input\"\n                        value={JSON.stringify(statementVC, null, 2)}\n                    />\n                )}\n            </div>\n        );\n    };\n\n    const ReaderVerifier = () => {\n\n        //const for reading qr functionality\n        //default image loader config https://www.npmjs.com/package/react-drag-drop-files\n        const [, setFile] = useState(null);\n        const [readData, setReadData] = useState(null)\n        const handleChange = (file) => {\n            setFile(file);\n            //reading from https://www.youtube.com/watch?v=nCf7wb8a4YM\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n\n                //remove prefix and set\n                setReadData(reader.result.replace(/^data:image\\/\\w+;base64,/, ''));\n                //no remove\n                //etReadData(reader.result)\n                console.log(reader.result)\n            }\n        };\n        const fileTypes = [\"PNG\"];\n\n\n        // const for ReaderVerifier\n\n\n\n\n\n\n        const [opFeedback, setOpFeedback] = useState('Ready')\n\n        const [inputJWT, setInputJWT] = useState('')\n         // Define your array of presentation types\n\n        const [jsonVPsDiffusion, setJsonVPsDiffusion] = useState([])\n\n        const [decodedJWT, setDecodedJWT] = useState(\"\")\n\n\n        const [chainOfVP, setChainOfVP] = useState([])\n        const [verifiableCredentialStatement, setVerifiableCredentialStatement] = useState('')\n\n        const [jsonDataVCSkills, setJsonDataVCSkills] = useState([])\n        const [jsonDataVCSkills2, setJsonDataVCSkills2] = useState([]);\n        const [jsonDataVCSkills3, setJsonDataVCSkills3] = useState([]);\n\n\n        const [verificationResSkill, setVerificationResSkill] = useState([])\n        const [traceLen, setTraceLen] = useState(0)\n        const [verificationResDiffusion, setVerificationResDiffusion] = useState([])\n\n\n        const verify_VC = async (vc) => {\n            try {\n                let response = await axios.post(\n                    `${addressVeramoAgent}/verify`,\n                    {\n                        credential:vc,\n                    },\n                    {\n                        headers:{\n                            'Content-Type':'application/json'\n                        },\n                        timeout:65000\n                    }\n                );\n                return response.data.res\n\n            } catch (error) {\n                console.log(\"error in verification\")\n            }\n            return \"\";\n        }\n        const verifyVPDiffusion = async (vp, index) => {\n            // Make a copy of the verificationResSkill array\n            const updatedverificationResDiffusion = [...verificationResDiffusion];\n            let verval = await verify_VP(vp);\n            console.log(verval)\n            // Update the verification result for the specific index\n            updatedverificationResDiffusion[index] = (verval.toString());\n            console.log(index);\n            // Set the updated array as the new state\n            setVerificationResDiffusion(updatedverificationResDiffusion);\n\n        }\n\n            const verifySkill = async (cred, index) => {\n                // Make a copy of the verificationResSkill array\n                const updatedVerificationResSkill = [...verificationResSkill];\n                let verval = await verify_VC(cred);\n                console.log(verval)\n                // Update the verification result for the specific index\n                updatedVerificationResSkill[index] = (verval.toString());\n                console.log(index);\n                // Set the updated array as the new state\n                setVerificationResSkill(updatedVerificationResSkill);\n            };\n            const verify_VP = async (vp) => {\n                try {\n                let response = await axios.post(\n                `${addressVeramoAgent}/verify/vp`,\n            {\n                vp:vp,\n            },\n            {\n                headers:{\n                'Content-Type':'application/json'\n            },\n                timeout:65000\n            }\n                );\n                return response.data.res\n\n            } catch (error) {\n                console.log(\"error in verification\")\n            }\n                return \"\";\n            }\n\n            const [risVerDecoded, setRisVerDecoded] = useState('')\n            const verifyVPDecoded = async (vp) => {\n                // Make a copy of the verificationResSkill array\n                let verval = await verify_VP(vp);\n                console.log(verval)\n                // Update the verification result for the specific index\n                setRisVerDecoded(verval.toString());\n            };\n            const [risVC, setRisVC] = useState('')\n            const verifyStatementVC = async (vc) => {\n                // Make a copy of the verificationResSkill array\n                let verval = await verify_VC(vc);\n                console.log(verval)\n                // Update the verification result for the specific index\n                setRisVC(verval.toString());\n            };\n\n\n            const fetchVerifiablePresentations = async () => {\n                try {\n                const response = await axios.get(`${addressVeramoAgent}/list_verifiable_presentations_with_type`, {\n                timeout:65000,\n                params:{\n                type:\"StatementDiffusion_VPv01\"\n            }\n            });\n\n                console.log(response.data)\n                setJsonVPsDiffusion(response.data);\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n            }\n\n            };\n\n            const decodeJWTVerifiablePresentationsText = async () => {\n                if (inputJWT) {\n                try {\n                const response = await axios.get(`${addressVeramoAgent}/decode_jwt`, { //TODO\n                timeout:65000,\n                params:{\n                jwt:inputJWT\n            }\n            });\n                console.log(response.data)\n                setDecodedJWT(response.data)\n                setRisVerDecoded('') //set to unkown\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n                setOpFeedback(\"Error in decoding jwt\")\n\n            }\n            } else {\n                setOpFeedback(\"Provide a jwt\")\n            }\n\n\n            };\n\n            const decodeJWTVerifiablePresentationsImg = async () => {\n                if (!readData) {\n                setOpFeedback(\"Provide a JWT\");\n                return;\n            }\n\n                try {\n                const response = await axios.post(\n                `${addressVeramoAgent}/decode_jwt/image`,\n            {img_data:readData},\n            {\n                headers:{\n                'Content-Type':'application/json'\n            },\n                timeout:165000\n            }\n                );\n                console.log(response.data)\n                setDecodedJWT(response.data);\n            } catch (error) {\n                console.error('Error fetching credentials:', error);\n                setOpFeedback(\"Error in decoding JWT\");\n            }\n            };\n            //extract from VC\n            const fetchSkillsFromVC = async () => {\n                if (verifiableCredentialStatement) {\n                setJsonDataVCSkills(verifiableCredentialStatement.credentialSubject.credentials_for_skills)\n                setJsonDataVCSkills2(verifiableCredentialStatement.credentialSubject.credentials_for_similar_concepts_skills)\n                setJsonDataVCSkills3(verifiableCredentialStatement.credentialSubject.credentials_for_general_concepts_skills)\n            }\n            }\n            const closeSkill = () => {\n                setJsonDataVCSkills([])\n                setJsonDataVCSkills2([])\n                setJsonDataVCSkills2([])\n\n            }\n            //trace back from VP diffusion of type diffusion to VP diffusion of type origin and then to VC Statement\n            const traceBack = async () => {\n                let history = []\n                let current, prev, response, jwt_of_prev, VC;\n                let i = 0;\n                if (!decodedJWT) {\n                return\n            }\n                try {\n                setOpFeedback(\"Tracing back\");\n                current = decodedJWT;\n                while (current) { //current will be assigned null when its time to stop\n                response = await axios.get(`${addressIPFSAgent}/retrieve`, {\n                timeout:120000, //2 min wait max\n                params:{\n                cid:current.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev\n            }\n            });\n                console.log(\"result got\" + JSON.stringify(response.data, null, 2))\n                i++\n                setOpFeedback(\"Tracing back at START - \" + i);\n                //address jwt of prev with uuid of prev as key\n                jwt_of_prev = JSON.parse(response.data.result)[current.verifiableCredential[0].credentialSubject.prev_vp_uuid]\n\n                setOpFeedback(\"Decoding jwt of START - \" + i);\n\n\n                response = await axios.get(`${addressVeramoAgent}/decode_jwt`, { //TODO\n                timeout:65000,\n                params:{\n                jwt:jwt_of_prev\n            }\n            });\n                prev = response.data\n\n                history.push(prev)\n                setOpFeedback(\"Decoded jwt up to (START - \" + i + \" ) proceed\");\n\n                if (prev.verifiableCredential[0].credentialSubject.type === 'origin') {\n                current = null\n            } else {\n                current = prev\n            }\n            }\n                setOpFeedback(\"Traced back \" + i + \" Verifiable Presentation Diffusion\");\n                setTraceLen(i)\n                setChainOfVP(history)\n            } catch (error) {\n                console.error('Error tracing back:', error);\n                setOpFeedback(\"Error in VP traceback\")\n            }\n                try {\n                // fetch Statement VC\n                console.log(\"trying to get\" + decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url)\n                response = await axios.get(`${addressIPFSAgent}/retrieve`, {\n                timeout:120000, //2 min wait max\n                params:{\n                cid:decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url\n            }\n            });\n                console.log(\"responded\" + response.data.result)\n                //let string_jwt_of_prev = (response.data.result)\n                //string_jwt_of_prev.replace('\\\\','')\n                jwt_of_prev = (response.data.result)\n\n                console.log(\"result got\" + (jwt_of_prev))\n                setOpFeedback(\"Decoding Statement VC\");\n                response = await axios.get(`${addressVeramoAgent}/decode_jwt`, {\n                timeout:65000,\n                params:{\n                jwt:jwt_of_prev\n            }\n            });\n                console.log(\"post\")\n\n                setOpFeedback(\"Traced back \" + i + \" Verifiable Presentation Diffusion and Statement VC\");\n                VC = (response.data)\n                console.log(\"vc is\" + JSON.stringify(VC))\n                setVerifiableCredentialStatement(VC)\n            } catch (error) {\n                console.error(\"error \" + error)\n                setOpFeedback(\"Error in VC statement trace back, maybe missing\")\n            }\n            };\n\n\n            <textarea\n                className=\"jwt-textarea\"\n                style={{overflowX:'auto', width:'100%', minHeight:'100px'}}\n                value={JSON.stringify(jsonVPsDiffusion, null, 2)}\n            />\n\n            return (\n            <div className=\"dids-data\" style={{align:'center', textAlign:'center', width:'70vw'}}>\n                <p className=\"title-dids-data\">Provide JWT of Diffusion Verifiable Presentation:</p>\n                <p>Text JWT or QRCODE of JWT:</p>\n\n                <p className=\"feedback-text\">{opFeedback}</p>\n                <textarea\n                    className=\"form-input-area\"\n                    placeholder=\"Enter JWT\"\n                    value={inputJWT}\n                    onChange={(e) => setInputJWT(e.target.value)}\n                />\n                <div style={{display:'flex', justifyContent:'center', alignItems:'center', height:'8vw'}}>\n                    <FileUploader\n                        handleChange={handleChange}\n                        name=\"file\"\n                        types={fileTypes}\n                        style={{\n                            width:'100%', // Adjust the width as per your requirement\n                            height:'100%', // Adjust the height as per your requirement\n                            objectFit:'cover', // Ensure the image fills the container\n                            overflow:'hidden', // Hide any overflow to prevent cropping\n                            maxWidth:'100%', // Allow the image to grow larger than its original size\n                            maxHeight:'100%', // Allow the image to grow larger than its original size\n                        }}\n                    />\n                </div>\n\n                <button className=\"process-button\" onClick={decodeJWTVerifiablePresentationsText}\n                >\n                    Decode Diffusion VP Text\n                </button>\n                <div>\n                </div>\n\n                <button className=\"process-button\" onClick={decodeJWTVerifiablePresentationsImg}\n                >\n                    Decode Diffusion VP Image\n                </button>\n                <h3>Trace Back after decoding</h3>\n\n\n                {decodedJWT && (\n                    <div key='decodedJWT1' className=\"credential\">\n\n                        {decodedJWT.verifiableCredential[0].credentialSubject.type && (\n                            <div key='decodedJWT2' className=\"credential\">\n\n                                <button className=\"process-button\" onClick={traceBack}\n                                >\n                                    Trace Back to Statement Verifiable Credential\n                                </button>\n\n\n                                <p className=\"feedback-text\">{opFeedback}</p>\n                                {verifiableCredentialStatement && (\n\n                                    <div key='cred' className=\"credential\">\n                                        <h3>Statement Verifiable Credential</h3>\n\n                                        <button className=\"action-button\"\n                                                onClick={fetchSkillsFromVC}> Fetch Skills VC\n                                        </button>\n                                        <div><p></p></div>\n                                        <button className=\"action-button\"\n                                                onClick={() => verifyStatementVC(verifiableCredentialStatement)}\n                                        >Verify Statement Verifiable Credential\n                                        </button>\n                                        <p>Result verification: <b>{risVC}</b></p> {/*  */}\n\n                                        <p>Issuance Date: {verifiableCredentialStatement.issuanceDate}</p>\n                                        <p>Credential Type: {verifiableCredentialStatement.type.join(', ')}</p>\n                                        <p>Issuer DID: {verifiableCredentialStatement.issuer.id}</p>\n                                        <p>Holder DID: {verifiableCredentialStatement.credentialSubject.id}</p>\n                                        <textarea\n                                            readOnly={true}\n                                            className=\"input\"\n                                            value={JSON.stringify(verifiableCredentialStatement.credentialSubject, null, 2)}\n                                        />\n                                        <button className=\"action-button\"\n                                                onClick={closeSkill}> Close Skills VC\n                                        </button>\n\n                                        {jsonDataVCSkills.length > 0 && (\n                                            <div key='cred' className=\"credential\">\n                                                <p>Skill Credential from keywords</p>\n\n                                                {jsonDataVCSkills.map((credential, index) => (\n                                                    <div key={index} className=\"credential\">\n                                                        <h3>Skill Credential #{index + 1}</h3>\n                                                        <button className=\"process-button\"\n                                                                onClick={() => verifySkill(credential, index)}> Verify\n                                                        </button>\n                                                        <p>Verification Result: <b>{verificationResSkill.at(index)}</b>\n                                                        </p>\n                                                        <p>Issuance Date: {credential.issuanceDate}</p>\n                                                        <p>Credential Type: {credential.type.join(', ')}</p>\n                                                        <p>Issuer DID: {credential.issuer.id}</p>\n                                                        <p>Holder DID: {credential.credentialSubject.id}</p>\n                                                        <textarea\n                                                            readOnly={true}\n                                                            className=\"input\"\n                                                            value={JSON.stringify(credential.credentialSubject, null, 2)}\n                                                        />\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                        {jsonDataVCSkills2.length > 0 && (\n                                            <div key='cred' className=\"credential\">\n                                                <p>Skill Credential similar keyword</p>\n\n                                                {jsonDataVCSkills2.map((credential, index) => (\n                                                    <div key={index} className=\"credential\">\n                                                        <h3>Skill Credential #{index + 1}</h3>\n                                                        <button className=\"process-button\"\n                                                                onClick={() => verifySkill(credential, index)}> Verify\n                                                        </button>\n                                                        <p>Verification Result: <b>{verificationResSkill.at(index)}</b>\n                                                        </p>\n                                                        <p>Issuance Date: {credential.issuanceDate}</p>\n                                                        <p>Credential Type: {credential.type.join(', ')}</p>\n                                                        <p>Issuer DID: {credential.issuer.id}</p>\n                                                        <p>Holder DID: {credential.credentialSubject.id}</p>\n                                                        <textarea\n                                                            readOnly={true}\n                                                            className=\"input\"\n                                                            value={JSON.stringify(credential.credentialSubject, null, 2)}\n                                                        />\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                        {jsonDataVCSkills3.length > 0 && (\n                                            <div key='cred' className=\"credential\">\n                                                <p>Skill Credential higher concept keyword</p>\n\n                                                {jsonDataVCSkills3.map((credential, index) => (\n                                                    <div key={index} className=\"credential\">\n                                                        <h3>Skill Credential #{index + 1}</h3>\n                                                        <button className=\"process-button\"\n                                                                onClick={() => verifySkill(credential, index)}> Verify\n                                                        </button>\n                                                        <p>Verification Result: <b>{verificationResSkill.at(index)}</b>\n                                                        </p>\n                                                        <p>Issuance Date: {credential.issuanceDate}</p>\n                                                        <p>Credential Type: {credential.type.join(', ')}</p>\n                                                        <p>Issuer DID: {credential.issuer.id}</p>\n                                                        <p>Holder DID: {credential.credentialSubject.id}</p>\n                                                        <textarea\n                                                            readOnly={true}\n                                                            className=\"input\"\n                                                            value={JSON.stringify(credential.credentialSubject, null, 2)}\n                                                        />\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n\n                                    </div>\n                                )}\n\n                            </div>)}\n                        <h3>Decoded Diffusion VP</h3>\n                        <h3>Discovered distance from origin: {traceLen}</h3>\n                        <button className=\"process-button\"\n                                onClick={() => verifyVPDecoded(decodedJWT)}> Verify\n                        </button>\n                        <p>Result verification: <b>{risVerDecoded}</b></p> {/* Type from Credential Subject */}\n\n                        <p>Type: {decodedJWT.verifiableCredential[0].credentialSubject.type}</p> {/* Type from Credential Subject */}\n                        <p>Issuance Date: {decodedJWT.issuanceDate}</p> {/* Issuance Date from VP */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>UUID of\n                            VP: {decodedJWT.id}</h3> {/* UUID from Issuer DID */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>URL or CID on IPFS of prev JWT\n                            URL: {decodedJWT.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev}</h3> {/* vc_statement_cid_or_url */}\n                        <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>VC statement CID or\n                            URL: {decodedJWT.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url}</h3> {/* vc_statement_cid_or_url */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Holder\n                            DID: {decodedJWT.holder}</p> {/* Holder DID */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Host\n                            URL: {decodedJWT.verifiableCredential[0].credentialSubject.host_URL}</p> {/* HostURL */}\n                        <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Prev\n                            UUID: {decodedJWT.verifiableCredential[0].credentialSubject.prev_vp_uuid}</p>\n                        <h3>JWT of Diffusion VP for next Diffusion VP</h3>\n                        <textarea\n                            className=\"jwt-textarea\"\n                            style={{overflowX:'auto', width:'90%', minHeight:'100px'}}\n                            value={decodedJWT.proof.jwt}\n                            readOnly/>\n                        {chainOfVP && (\n                            <div key='decodedJWT' className=\"credential\">\n\n                                {chainOfVP.map((presentation, index) => (\n                                    <div key={index} className=\"credential\">\n                                        <h3>Diffusion VP with distance from origin: {traceLen - (index + 1)}</h3>\n                                        <button className=\"process-button\"\n                                                onClick={() => verifyVPDiffusion(presentation, index)}> Verify\n                                        </button>\n                                        <p>Verification Result: <b>{verificationResDiffusion.at(index)}</b> </p>\n\n                                            <p>Type: {presentation.verifiableCredential[0].credentialSubject.type}</p> {/* Type from Credential Subject */}\n                                            <p>Issuance\n                                                Date: {presentation.issuanceDate}</p> {/* Issuance Date from VP */}\n                                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>UUID of\n                                                VP: {presentation.id}</h3> {/* UUID from Issuer DID */}\n                                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>URL or CID on\n                                                IPFS\n                                                of prev JWT\n                                                URL: {presentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev}</h3> {/* vc_statement_cid_or_url */}\n                                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>VC statement\n                                                CID\n                                                or\n                                                URL: {presentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url}</h3> {/* vc_statement_cid_or_url */}\n                                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Holder\n                                                DID: {presentation.holder}</p> {/* Holder DID */}\n                                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Host\n                                                URL: {presentation.verifiableCredential[0].credentialSubject.host_URL}</p> {/* HostURL */}\n                                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Prev\n                                                UUID: {presentation.verifiableCredential[0].credentialSubject.prev_vp_uuid}</p>\n\n                                            <h3>JWT of Diffusion VP #{index + 1} for next Diffusion VP</h3>\n\n                                            <textarea\n                                                className=\"jwt-textarea\"\n                                                style={{overflowX:'auto', width:'90%', minHeight:'100px'}}\n                                                value={presentation.proof.jwt}\n                                                readOnly/>\n\n\n                                    </div>\n                                    )\n                                    )}\n                            </div>\n                        )}\n\n                    </div>\n                )}\n                <div>\n                    <p>--</p>\n                </div>\n                <button className=\"process-button\" onClick={fetchVerifiablePresentations}>Fetch Diffusion VP</button>\n                {jsonVPsDiffusion.map((presentation, index) => (\n                        <div key={index} className=\"credential\">\n                            <h3>Diffusion VP #{index + 1}</h3>\n                            <p>Type: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.type}</p> {/* Type from Credential Subject */}\n                            <p>Issuance\n                                Date: {presentation.verifiablePresentation.issuanceDate}</p> {/* Issuance Date from VP */}\n                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>UUID of\n                                VP: {presentation.verifiablePresentation.id}</h3> {/* UUID from Issuer DID */}\n                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>URL or CID on IPFS of prev JWT\n                                URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.url_or_cid_jwt_prev}</h3> {/* vc_statement_cid_or_url */}\n                            <h3 style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>VC statement CID or\n                                URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.statement_vc_cid_or_url}</h3> {/* vc_statement_cid_or_url */}\n                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Holder\n                                DID: {presentation.verifiablePresentation.holder}</p> {/* Holder DID */}\n                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Host\n                                URL: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.host_URL}</p> {/* HostURL */}\n                            <p style={{overflowX:'auto', width:'100%', minHeight:'auto'}}>Prev\n                                UUID: {presentation.verifiablePresentation.verifiableCredential[0].credentialSubject.prev_vp_uuid}</p>\n\n                            <h3>JWT of Diffusion VP #{index + 1} for next Diffusion VP</h3>\n\n                            <textarea\n                                className=\"jwt-textarea\"\n                                style={{overflowX:'auto', width:'90%', minHeight:'100px'}}\n                                value={presentation.verifiablePresentation.proof.jwt}\n                                readOnly/>\n\n\n                        </div>\n                    )\n                )}\n                {jsonVPsDiffusion.length > 0 && (\n                    <textarea\n                        className=\"jwt-textarea\"\n                        style={{overflowX:'auto', width:'100%', minHeight:'100px'}}\n                        value={JSON.stringify(jsonVPsDiffusion, null, 2)}\n                        readOnly\n                    />\n                )}\n\n\n            </div>\n            );\n            };\n\n\n            return (\n            <div className=\"container\">\n                {dids.length === 0 ? (\n                    <div>\n                        <p>Loading Dids of Agent</p>\n                        <button className=\"action-button\" onClick={newDID}>Generate new\n                        DID\n                        </button>\n\n                    </div>\n                ) : (\n                    <div className=\"dids-data\">\n                        <p className=\"title-dids-data\">Select DID from wallet:</p>\n                        <select\n                            className=\"dids-select\"\n                            value={selectedDid}\n                            onChange={(e) => setSelectedDid(e.target.value)}\n                        >\n                            {dids.map((did, i) => (\n                                <option key={i} value={did}>\n                                    {did}\n                                </option>\n                            ))}\n                        </select>\n                        <button className=\"action-button\" onClick={newDID}>Generate new\n\n                        </button>\n                        <p className=\"title-dids-data\">Select DID from wallet:</p>\n                        <select\n                            className=\"dids-select\"\n                            value={selectedDid}\n                            onChange={(e) => setSelectedDid(e.target.value)}\n                        >\n                            {dids.map((did, i) => (\n                                <option key={i} value={did}>\n                                    {did}\n                                </option>\n                            ))}\n                        </select>\n                        <button className=\"action-button\" onClick={newDID}>Generate new\n\n                        </button>\n\n\n                    </div>\n                )}\n\n                <div className=\"dids-data\">\n                    <p className=\"title-dids-data\">Choose role:</p>\n                    <select\n                        className=\"dids-select\"\n                        value={selectedRole}\n                        onChange={(e) => setSelectedRole(e.target.value)}\n                    >\n                        {roles.map((r, i) => (\n                            <option key={i} value={r}>\n                                {r}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                {selectedDid && selectedRole === \"CertificateIssuer\" ? (\n                    <CertificateIssuerForm/>\n                ) : (\n                    <div>\n                    </div>\n                )}\n                {selectedDid && selectedRole === \"CAVS\" ? (\n                    <CavsComponentPanel/>\n                ) : (\n                    <div>\n                    </div>\n                )}\n\n\n                {\n                    selectedDid && selectedRole === \"AuthorHolder\" ? (\n                        <AuthorHolder/>\n                    ) : (\n                        <div/>\n                    )}\n                {\n                    selectedDid && selectedRole === \"Spreader\" ? (\n                        <Spreader/>\n                    ) : (\n                        <div/>\n                    )}\n\n\n                {\n                    selectedDid && selectedRole === \"ReaderVerifier\" ? (\n                        <ReaderVerifier/>\n                    ) : (\n                        <div/>\n                    )}\n                <div className=\"dids-data\" align=\"center\">\n                    <div className=\"form-group\">\n                        <label className=\"form-label\" htmlFor=\"skillUri\">QRCODE from JWT:</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-input\"\n                            id=\"verifiableCredentialHash1\"\n                            value={verifiableCredentialHash1}\n                            onChange={(e) => setVerifiableCredentialHash1(e.target.value)}\n                        />\n                    </div>\n                    <button className=\"process-button\" onClick={getQR}>Get QRCODE</button>\n                    <div>\n                        {image ? (\n                            <img src={`data:image/png;base64,${image}`}/>\n                        ) : (\n                            <p>No image.</p>\n                        )}\n                    </div>\n                </div>\n\n            </div>\n            );\n\n            }\n            export default App;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}